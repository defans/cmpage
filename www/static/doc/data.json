{
    "project": {
        "name": "",
        "description": "<h2>CmPage</h2> <p>企业信息化的NodeJS开源框架</p><p>其UI框架采用BJUI，后端采用ThinkJS，数据库采用MySql和Mssql，手机端采用MUI</p><br><p>本框架通过配置模块的显示列、编辑列、查询列、按钮等，可以从数据库的表或者视图取数据，生成页面，通过Url: /cmpage/page/list?modulename=User 可以访问User模块，实现了常用的分页列表、新增、编辑、查看、删除、条件查询等功能, 手机端页面功能类似</p><p>运行步骤简述如下（具体参照 thinkjs.org）： </p><p> 1、Mysql数据库备份文件（/db/cmpage_my.sql）  </p><p> 2、在/src/common/config/db.js 中配置数据库连接参数 </p><p> 3、运行：npm install --registry=https://registry.npm.taobao.org --verbose </p><p> 4、运行：npm start 5、手机端项目的目录：/mob，独立项目，非必需，请用HBuider打开，然后用USB连上手机就可以调试了，具体参见 http://www.dcloud.io/runtime.html, 也可以用手机扫描二维码(http://139.129.48.131:8300/admin/index/login ),安装Andriod版本的DEMO。</p><br><p> 建议二次开发之前先熟悉源代码，有更多注释，还可以打开其中的调试信息(//debug(xxx,xxx)) 看看运行时的各种返回信息<br>",
        "version": "1.0.0",
        "url": "/static/doc/index.html",
        "navs": [
            {
                "name": "首页",
                "url": "/home/index/index"
            },
            {
                "name": "文档",
                "url": "/static/doc/index.html"
            },
            {
                "name": "演示",
                "url": "/admin/index/index"
            },
            {
                "name": "日志",
                "url": "/home/index/log"
            }
        ]
    },
    "files": {
        "src\\admin\\controller\\base.js": {
            "name": "src\\admin\\controller\\base.js",
            "modules": {
                "admin.controller": 1
            },
            "classes": {
                "admin.controller.base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\controller\\code.js": {
            "name": "src\\admin\\controller\\code.js",
            "modules": {},
            "classes": {
                "admin.controller.code": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\controller\\index.js": {
            "name": "src\\admin\\controller\\index.js",
            "modules": {},
            "classes": {
                "admin.controller.index": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\controller\\mob.js": {
            "name": "src\\admin\\controller\\mob.js",
            "modules": {},
            "classes": {
                "admin.controller.mob": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\code.js": {
            "name": "src\\admin\\model\\code.js",
            "modules": {
                "admin.model": 1
            },
            "classes": {
                "admin.model.code": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\code_list.js": {
            "name": "src\\admin\\model\\code_list.js",
            "modules": {},
            "classes": {
                "admin.model.code_list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\code_lookup.js": {
            "name": "src\\admin\\model\\code_lookup.js",
            "modules": {},
            "classes": {
                "admin.model.code_lookup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\groupuser.js": {
            "name": "src\\admin\\model\\groupuser.js",
            "modules": {},
            "classes": {
                "admin.model.groupuser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\groupuser_add.js": {
            "name": "src\\admin\\model\\groupuser_add.js",
            "modules": {},
            "classes": {
                "admin.model.groupuser_add": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\log.js": {
            "name": "src\\admin\\model\\log.js",
            "modules": {},
            "classes": {
                "admin.model.log": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\login.js": {
            "name": "src\\admin\\model\\login.js",
            "modules": {},
            "classes": {
                "admin.model.login": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\privilege.js": {
            "name": "src\\admin\\model\\privilege.js",
            "modules": {},
            "classes": {
                "admin.model.privilege": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\teamuser.js": {
            "name": "src\\admin\\model\\teamuser.js",
            "modules": {},
            "classes": {
                "admin.model.teamuser": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\teamuser_add.js": {
            "name": "src\\admin\\model\\teamuser_add.js",
            "modules": {},
            "classes": {
                "admin.model.teamuser_add": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\admin\\model\\user.js": {
            "name": "src\\admin\\model\\user.js",
            "modules": {},
            "classes": {
                "admin.model.user": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\config\\config.js": {
            "name": "src\\cmpage\\config\\config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\controller\\base.js": {
            "name": "src\\cmpage\\controller\\base.js",
            "modules": {
                "cmpage.controller": 1
            },
            "classes": {
                "cmpage.controller.base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\controller\\mob.js": {
            "name": "src\\cmpage\\controller\\mob.js",
            "modules": {},
            "classes": {
                "cmpage.controller.mob": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\controller\\module.js": {
            "name": "src\\cmpage\\controller\\module.js",
            "modules": {},
            "classes": {
                "cmpage.controller.module": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\controller\\page.js": {
            "name": "src\\cmpage\\controller\\page.js",
            "modules": {},
            "classes": {
                "cmpage.controller.page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\controller\\utils.js": {
            "name": "src\\cmpage\\controller\\utils.js",
            "modules": {},
            "classes": {
                "cmpage.controller.utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\controller\\wechat.js": {
            "name": "src\\cmpage\\controller\\wechat.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\logic\\page.js": {
            "name": "src\\cmpage\\logic\\page.js",
            "modules": {
                "cmpage.logic": 1
            },
            "classes": {
                "cmpage.logic.page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\area.js": {
            "name": "src\\cmpage\\model\\area.js",
            "modules": {},
            "classes": {
                "cmpage.model.area": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\base.js": {
            "name": "src\\cmpage\\model\\base.js",
            "modules": {},
            "classes": {
                "cmpage.model.base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\file_list.js": {
            "name": "src\\cmpage\\model\\file_list.js",
            "modules": {},
            "classes": {
                "cmpage.model.file_list": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\module.js": {
            "name": "src\\cmpage\\model\\module.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\page.js": {
            "name": "src\\cmpage\\model\\page.js",
            "modules": {},
            "classes": {
                "cmpage.model.page": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\page_excel.js": {
            "name": "src\\cmpage\\model\\page_excel.js",
            "modules": {},
            "classes": {
                "cmpage.model.page_excel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\page_lookup.js": {
            "name": "src\\cmpage\\model\\page_lookup.js",
            "modules": {},
            "classes": {
                "cmpage.model.page_lookup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\page_mob.js": {
            "name": "src\\cmpage\\model\\page_mob.js",
            "modules": {},
            "classes": {
                "cmpage.model.page_mob": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\page_ms.js": {
            "name": "src\\cmpage\\model\\page_ms.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\model\\utils.js": {
            "name": "src\\cmpage\\model\\utils.js",
            "modules": {},
            "classes": {
                "cmpage.model.utils": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\cmpage\\cmpage_global.js": {
            "name": "src\\cmpage\\cmpage_global.js",
            "modules": {},
            "classes": {
                "cmpage.cmpage_global": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\config\\config.js": {
            "name": "src\\flow\\config\\config.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\controller\\act.js": {
            "name": "src\\flow\\controller\\act.js",
            "modules": {
                "flow.controller": 1
            },
            "classes": {
                "flow.controller.act": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\controller\\base.js": {
            "name": "src\\flow\\controller\\base.js",
            "modules": {},
            "classes": {
                "flow.controller.base": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\controller\\proc.js": {
            "name": "src\\flow\\controller\\proc.js",
            "modules": {},
            "classes": {
                "flow.controller.proc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\controller\\task.js": {
            "name": "src\\flow\\controller\\task.js",
            "modules": {},
            "classes": {
                "flow.controller.task": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\controller\\task_act.js": {
            "name": "src\\flow\\controller\\task_act.js",
            "modules": {},
            "classes": {
                "flow.controller.task_act": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\logic\\index.js": {
            "name": "src\\flow\\logic\\index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\act.js": {
            "name": "src\\flow\\model\\act.js",
            "modules": {
                "flow.model": 1
            },
            "classes": {
                "flow.model.act": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\act_assign.js": {
            "name": "src\\flow\\model\\act_assign.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\act_path.js": {
            "name": "src\\flow\\model\\act_path.js",
            "modules": {},
            "classes": {
                "flow.model.act_path": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\appr.js": {
            "name": "src\\flow\\model\\appr.js",
            "modules": {
                "demo.model": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\appr_task.js": {
            "name": "src\\flow\\model\\appr_task.js",
            "modules": {},
            "classes": {
                "cmpage.model.appr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\proc.js": {
            "name": "src\\flow\\model\\proc.js",
            "modules": {},
            "classes": {
                "flow.model.proc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\proc_assign.js": {
            "name": "src\\flow\\model\\proc_assign.js",
            "modules": {},
            "classes": {
                "flow.model.proc_assign": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\proc_list.js": {
            "name": "src\\flow\\model\\proc_list.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\task.js": {
            "name": "src\\flow\\model\\task.js",
            "modules": {},
            "classes": {
                "flow.model.task": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\task_act.js": {
            "name": "src\\flow\\model\\task_act.js",
            "modules": {},
            "classes": {
                "flow.model.task_act": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\task_act_appr.js": {
            "name": "src\\flow\\model\\task_act_appr.js",
            "modules": {},
            "classes": {
                "flow.model.task_act_appr": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\model\\task_list.js": {
            "name": "src\\flow\\model\\task_list.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src\\flow\\cmpage_global_flow.js": {
            "name": "src\\flow\\cmpage_global_flow.js",
            "modules": {
                "cmpage.model": 1
            },
            "classes": {
                "cmpage.cmpage_global_flow": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "admin.controller": {
            "name": "admin.controller",
            "submodules": {},
            "classes": {
                "admin.controller.base": 1,
                "admin.controller.code": 1,
                "admin.controller.index": 1,
                "admin.controller.mob": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\admin\\controller\\mob.js",
            "line": 13,
            "description": "用户及权限系统的controller模块，实现了对外的URL接口，包括PC端和移动端\n\n 注意点 :\n 1. base.js继承自 think.controller.base;\n 2. 其他controller 继承自 base.js;\n 3. 移动端APP的菜单是单独设置的，要单独配置各个角色和用户的权限；\n 4. 移动端和PC端的版本是分开设置的;"
        },
        "admin.model": {
            "name": "admin.model",
            "submodules": {},
            "classes": {
                "admin.model.code": 1,
                "admin.model.code_list": 1,
                "admin.model.code_lookup": 1,
                "admin.model.groupuser": 1,
                "admin.model.groupuser_add": 1,
                "admin.model.log": 1,
                "admin.model.login": 1,
                "admin.model.privilege": 1,
                "admin.model.teamuser": 1,
                "admin.model.teamuser_add": 1,
                "admin.model.user": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\admin\\model\\user.js",
            "line": 13,
            "description": "用户及权限系统模块的model部分，实现了实现了相关的数据操作和逻辑处理\n\n注意点 :\n1. 用户界面显示的类继承自cmpage/page;\n2. 树形结构的参数设置统一存放于t_code表中；\n3. 账套用户和团队用户的设置相仿，逻辑相似；"
        },
        "cmpage.controller": {
            "name": "cmpage.controller",
            "submodules": {},
            "classes": {
                "cmpage.controller.base": 1,
                "cmpage.controller.mob": 1,
                "cmpage.controller.module": 1,
                "cmpage.controller.page": 1,
                "cmpage.controller.utils": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 14,
            "description": "业务模块配置和展示系统的controller模块，实现了对外的URL接口，包括PC端和移动端\n\n注意点 :\n1. base.js继承自 think.controller.base;\n2. 其他controller 继承自 base.js;\n3. 具体的业务模块可以继承并扩展 cmpage/model/page.js 来实现业务逻辑\n4. 移动端、主从页、查找带回等页面都是从 cmpage/model/page.js 继承，具体的业务模块请适当选择基类\n5. 使用cmpage的页面统一从 controller/page.js 提供URL接口调用，也可继承并重写相应方法来增加逻辑（但一般从model/page.js继承即可）"
        },
        "cmpage.logic": {
            "name": "cmpage.logic",
            "submodules": {},
            "classes": {
                "cmpage.logic.page": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\cmpage\\logic\\page.js",
            "line": 21,
            "description": "业务模块配置和展示系统的logic，实现了对前端传入的参数校验\n\n注意点 :\n1. 校验的错误提示已改为中文，配置在 common/config/zh-cn.js\n2. 一般不实现业务逻辑\n3. 由于cmpage的模块都是统一的URL接口，因此都可以按配置实现校验"
        },
        "cmpage.model": {
            "name": "cmpage.model",
            "submodules": {},
            "classes": {
                "cmpage.model.area": 1,
                "cmpage.model.base": 1,
                "cmpage.model.file_list": 1,
                "cmpage.model.page": 1,
                "cmpage.model.page_excel": 1,
                "cmpage.model.page_lookup": 1,
                "cmpage.model.page_mob": 1,
                "cmpage.model.utils": 1,
                "cmpage.cmpage_global": 1,
                "cmpage.cmpage_global_flow": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\flow\\cmpage_global_flow.js",
            "line": 7
        },
        "flow.controller": {
            "name": "flow.controller",
            "submodules": {},
            "classes": {
                "flow.controller.act": 1,
                "flow.controller.base": 1,
                "flow.controller.proc": 1,
                "flow.controller.task": 1,
                "flow.controller.task_act": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\flow\\controller\\task_act.js",
            "line": 3,
            "description": "流程模板配置和引擎调用接口的controller模块，实现了对外的URL接口，包括PC端和移动端\n\n注意点 :\n1. base.js继承自 think.controller.base;\n2. 其他controller 继承自 base.js;\n3. 具体的业务模块可以继承并扩展 flow/model/act.js 来实现增加标准以外的逻辑\n4. 可以根据具体的业务模块选择适当基类，例如审核类:flow/model/act_appr.js\n5. 使用flow的页面统一从 controller/act.js, proc.js 提供的URL接口调用，也可继承并重写相应方法来增加逻辑（但一般从model/act.js, proc.js继承即可）"
        },
        "flow.model": {
            "name": "flow.model",
            "submodules": {},
            "classes": {
                "flow.model.act": 1,
                "flow.model.act_path": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\flow\\model\\act_path.js",
            "line": 10,
            "description": "流程模板配置和引擎调用接口的逻辑实现类\n\n注意点 :\n1. 工作流方法调用统一归口到proc.js 和 act.js ;\n2. 根据流程模板设置的实现类，proc.js 和 act.js 会调用该类\n3. 具体的业务逻辑实现类可以继承并扩展 task.js 和 task_act.js等 来实现增加标准以外的业务逻辑\n4. 可以根据具体的业务模块选择适当基类，例如审核类:flow/model/task_act_appr.js\n5. 原则上：业务无关的流程控制逻辑放于 proc.js 和 act.js ，业务相关的流程控制放于task_xxx.js 中"
        },
        "demo.model": {
            "name": "demo.model",
            "submodules": {},
            "classes": {
                "flow.model.proc_assign": 1,
                "cmpage.model.appr": 1,
                "flow.model.proc": 1,
                "flow.model.task": 1,
                "flow.model.task_act": 1,
                "flow.model.task_act_appr": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src\\flow\\model\\task_act_appr.js",
            "line": 10,
            "description": "几种典型的业务模块演示，包括普通页面、主从页面、各种编辑类型、按钮调用方式及工作流的调用等"
        }
    },
    "classes": {
        "admin.controller.base": {
            "name": "admin.controller.base",
            "shortname": "admin.controller.base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.controller",
            "namespace": "",
            "file": "src\\admin\\controller\\base.js",
            "line": 21,
            "description": "admin.controller的基类，用于admin模块下的其他controller类的继承，\n提供一些子类的公共方法"
        },
        "admin.controller.code": {
            "name": "admin.controller.code",
            "shortname": "admin.controller.code",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.controller",
            "namespace": "",
            "file": "src\\admin\\controller\\code.js",
            "line": 13,
            "description": "代码与参数模块的RUL接口，包括常用参数设置、权限相关配置"
        },
        "admin.controller.index": {
            "name": "admin.controller.index",
            "shortname": "admin.controller.index",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.controller",
            "namespace": "",
            "file": "src\\admin\\controller\\index.js",
            "line": 13,
            "description": "admin.controller的index类，提供了PC端后台管理系统的用户登录、菜单显示等URL接口"
        },
        "admin.controller.mob": {
            "name": "admin.controller.mob",
            "shortname": "admin.controller.mob",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.controller",
            "namespace": "",
            "file": "src\\admin\\controller\\mob.js",
            "line": 13,
            "description": "移动端APP的admin模块的RUL接口，包括用户登录、取菜单、版本信息等\n由于移动端和PC端的表现方式和功能有所差别，因此部分URL接口单独实现"
        },
        "admin.model.code": {
            "name": "admin.model.code",
            "shortname": "admin.model.code",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\code.js",
            "line": 20,
            "description": "代码于参数设置的操作类，提供一些操作t_code表的方法"
        },
        "admin.model.code_list": {
            "name": "admin.model.code_list",
            "shortname": "admin.model.code_list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\code_list.js",
            "line": 13,
            "description": "代码于参数设置的页面展示及操作类，单层的CRUD，配合 cmpage/controller/page.js 中的相关调用，继承自 cmpage/model/page.js"
        },
        "admin.model.code_lookup": {
            "name": "admin.model.code_lookup",
            "shortname": "admin.model.code_lookup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\code_lookup.js",
            "line": 13,
            "description": "参数选择，继承自 cmpage/model/page_lookup.js"
        },
        "admin.model.groupuser": {
            "name": "admin.model.groupuser",
            "shortname": "admin.model.groupuser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\groupuser.js",
            "line": 14,
            "description": "账套与用户操作类，并配合界面操作输出相应HTML，"
        },
        "admin.model.groupuser_add": {
            "name": "admin.model.groupuser_add",
            "shortname": "admin.model.groupuser_add",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\groupuser_add.js",
            "line": 14,
            "description": "加入账套的待选择列表"
        },
        "admin.model.log": {
            "name": "admin.model.log",
            "shortname": "admin.model.log",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\log.js",
            "line": 14,
            "description": "系统操作的日志模块"
        },
        "admin.model.login": {
            "name": "admin.model.login",
            "shortname": "admin.model.login",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\login.js",
            "line": 14,
            "description": "登录用户的操作类，提供一些操作t_user,vw_user的方法"
        },
        "admin.model.privilege": {
            "name": "admin.model.privilege",
            "shortname": "admin.model.privilege",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\privilege.js",
            "line": 14,
            "description": "用户权限相关的操作类"
        },
        "admin.model.teamuser": {
            "name": "admin.model.teamuser",
            "shortname": "admin.model.teamuser",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\teamuser.js",
            "line": 13,
            "description": "账套与用户操作类，并配合界面操作输出相应HTML，"
        },
        "admin.model.teamuser_add": {
            "name": "admin.model.teamuser_add",
            "shortname": "admin.model.teamuser_add",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\teamuser_add.js",
            "line": 14,
            "description": "加入账套的待选择列表"
        },
        "admin.model.user": {
            "name": "admin.model.user",
            "shortname": "admin.model.user",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "admin.model",
            "namespace": "",
            "file": "src\\admin\\model\\user.js",
            "line": 13,
            "description": "登录用户的操作类，提供一些操作t_user,vw_user的方法"
        },
        "cmpage.controller.base": {
            "name": "cmpage.controller.base",
            "shortname": "cmpage.controller.base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.controller",
            "namespace": "",
            "file": "src\\cmpage\\controller\\base.js",
            "line": 23,
            "description": "cmpage.controller的基类，用于cmpage模块下的其他controller类的继承，\n提供一些子类的公共方法"
        },
        "cmpage.controller.mob": {
            "name": "cmpage.controller.mob",
            "shortname": "cmpage.controller.mob",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.controller",
            "namespace": "",
            "file": "src\\cmpage\\controller\\mob.js",
            "line": 14,
            "description": "移动端，业务模块展示及常用操作的URL接口"
        },
        "cmpage.controller.module": {
            "name": "cmpage.controller.module",
            "shortname": "cmpage.controller.module",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.controller",
            "namespace": "",
            "file": "src\\cmpage\\controller\\module.js",
            "line": 13,
            "description": "业务模块设置的URL接口"
        },
        "cmpage.controller.page": {
            "name": "cmpage.controller.page",
            "shortname": "cmpage.controller.page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.controller",
            "namespace": "",
            "file": "src\\cmpage\\controller\\page.js",
            "line": 14,
            "description": "业务模块展示及常用操作的URL接口"
        },
        "cmpage.controller.utils": {
            "name": "cmpage.controller.utils",
            "shortname": "cmpage.controller.utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.controller",
            "namespace": "",
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 14,
            "description": "工具集、其他URL接口"
        },
        "cmpage.logic.page": {
            "name": "cmpage.logic.page",
            "shortname": "cmpage.logic.page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.logic",
            "namespace": "",
            "file": "src\\cmpage\\logic\\page.js",
            "line": 21,
            "description": "调用 cmpage/controller/page.js 的一些URL接口之前\n提供 thinkjs 的校验"
        },
        "cmpage.model.area": {
            "name": "cmpage.model.area",
            "shortname": "cmpage.model.area",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\area.js",
            "line": 23,
            "description": "全国行政区划的操作类，如果内容作调整后，手机端APP部分也应该做调整，因为数据是预存在APP端的"
        },
        "cmpage.model.base": {
            "name": "cmpage.model.base",
            "shortname": "cmpage.model.base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\base.js",
            "line": 14,
            "description": "业务模块的基类，通过ORM框架 Sequelize 连接各个业务数据库</br>\n连接参数配置于各个module的配置文件中，xxxx/config/db.config </br>\n为了和thinkjs.model的常用方法名保持一致，以下实现了相关方法，通过转换成sql语句用 sequelize.query(sql) 执行 </br>\n如果想使用 sequelize 的ORM方法，可以在子类中通过 this.sequelize.xxxx 来调用</br>\n子类中用think.model,或者cmpage.model来实例化其他类其他模块，本类中的 model 用于设置表名以便生成SQL语句，也为了兼容 thinkjs.model(表名).xxx 的调用方式 </br>\n如果以后版本的 ThinkJS能支持mssql，以上兼容可以使得将 page.js 改回从 think.model.base 继承的时候不需要做太大改动 </br>"
        },
        "cmpage.model.file_list": {
            "name": "cmpage.model.file_list",
            "shortname": "cmpage.model.file_list",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\file_list.js",
            "line": 14,
            "description": "实现了文件列表页面的功能，定制了移动端的页面"
        },
        "cmpage.model.page": {
            "name": "cmpage.model.page",
            "shortname": "cmpage.model.page",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\page.js",
            "line": 15,
            "description": "普通页面的数据处理类，实现了具体的操作方法"
        },
        "cmpage.model.page_excel": {
            "name": "cmpage.model.page_excel",
            "shortname": "cmpage.model.page_excel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\page_excel.js",
            "line": 14,
            "description": "实现了excel导出等处理，可继承本类做定制化的excel文件导出"
        },
        "cmpage.model.page_lookup": {
            "name": "cmpage.model.page_lookup",
            "shortname": "cmpage.model.page_lookup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\page_lookup.js",
            "line": 14,
            "description": "实现了查找带回的功能，可继承本类做定制化的查找带回页面，调用： /cmpage/page/lookup?modulename=xxx*multiselect=0 </br>\n实现了选择加入的功能，可继承本类做定制化的选择加入页面，调用： /cmpage/page/lookup?modulename=xxx*selectadd=1*key=c_id*callmodel=docu/docu_rec*callfn=goodsAdd*callparms=xxx,\n其中key是需要回传的字段名称，callmodel是回调的thinkjs模块，callfn 是回调的函数名称, callparms 是额外的参数，例如：单据主ID等 </br>"
        },
        "cmpage.model.page_mob": {
            "name": "cmpage.model.page_mob",
            "shortname": "cmpage.model.page_mob",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 17,
            "description": "实现了手机APP的模块接口，可继承本类对手机APP的业务模块做定制化的HTML输出和功能操作, 方法名加了mob做前导，以示区分"
        },
        "cmpage.model.utils": {
            "name": "cmpage.model.utils",
            "shortname": "cmpage.model.utils",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\model\\utils.js",
            "line": 14,
            "description": "工具类，提供一些公用的方法"
        },
        "cmpage.cmpage_global": {
            "name": "cmpage.cmpage_global",
            "shortname": "cmpage.cmpage_global",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 7,
            "description": "cmpage的全局方法和变量设置，置入（Object.assign）thinkjs 的 global 中"
        },
        "flow.controller.act": {
            "name": "flow.controller.act",
            "shortname": "flow.controller.act",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.controller",
            "namespace": "",
            "file": "src\\flow\\controller\\act.js",
            "line": 15,
            "description": "提供工作流模板的活动节点设置的URL接口<br/>\n提供工作流引擎的活动节点运转相关的URL调用接口"
        },
        "flow.controller.base": {
            "name": "flow.controller.base",
            "shortname": "flow.controller.base",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.controller",
            "namespace": "",
            "file": "src\\flow\\controller\\base.js",
            "line": 7,
            "description": "flow.controller的基类，用于flow模块下的其他controller类的继承，\n提供一些子类的公共方法"
        },
        "flow.controller.proc": {
            "name": "flow.controller.proc",
            "shortname": "flow.controller.proc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.controller",
            "namespace": "",
            "file": "src\\flow\\controller\\proc.js",
            "line": 3,
            "description": "提供工作流模板设计的URL接口"
        },
        "flow.controller.task": {
            "name": "flow.controller.task",
            "shortname": "flow.controller.task",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.controller",
            "namespace": "",
            "file": "src\\flow\\controller\\task.js",
            "line": 3,
            "description": "提供工作流模板设计的URL接口<br/>\n提供工作流引擎的URL调用接口"
        },
        "flow.controller.task_act": {
            "name": "flow.controller.task_act",
            "shortname": "flow.controller.task_act",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.controller",
            "namespace": "",
            "file": "src\\flow\\controller\\task_act.js",
            "line": 3,
            "description": "提供工作流模板设计的URL接口<br/>\n提供工作流引擎的URL调用接口"
        },
        "flow.model.act": {
            "name": "flow.model.act",
            "shortname": "flow.model.act",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.model",
            "namespace": "",
            "file": "src\\flow\\model\\act.js",
            "line": 22,
            "description": "提供工作流的活动节点运转的相关方法，对外提供统一归口的调用<br/>\n根据活动节点中的实现类设置，调用具体业务相关的类来实现节点的具体功能"
        },
        "flow.model.proc_assign": {
            "name": "flow.model.proc_assign",
            "shortname": "flow.model.proc_assign",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "demo.model",
            "namespace": "",
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 10,
            "description": "提供工作流指派及权限处理的相关方法，对外提供统一归口的调用<br/>"
        },
        "flow.model.act_path": {
            "name": "flow.model.act_path",
            "shortname": "flow.model.act_path",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "flow.model",
            "namespace": "",
            "file": "src\\flow\\model\\act_path.js",
            "line": 10,
            "description": "提供工作流的活动路径的相关方法，注意供act、task_act及其继承类的调用 <br/>\n一般不需要继承，也没有相关联的业务类"
        },
        "cmpage.model.appr": {
            "name": "cmpage.model.appr",
            "shortname": "cmpage.model.appr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "demo.model",
            "namespace": "",
            "file": "src\\flow\\model\\appr_task.js",
            "line": 16,
            "description": "通用的审核操作，把相关业务的审核记录到表 t_appr，并作相应逻辑实现 </br>\n通过工作流的任务机制进行流转(fw_task,fw_task_act)"
        },
        "flow.model.proc": {
            "name": "flow.model.proc",
            "shortname": "flow.model.proc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "demo.model",
            "namespace": "",
            "file": "src\\flow\\model\\proc.js",
            "line": 10,
            "description": "提供工作流控制的相关方法，对外提供统一归口的调用<br/>\n根据流程模板中的实现类设置，调用具体业务相关的类来实现具体功能"
        },
        "flow.model.task": {
            "name": "flow.model.task",
            "shortname": "flow.model.task",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "demo.model",
            "namespace": "",
            "file": "src\\flow\\model\\task.js",
            "line": 10,
            "description": "提供工作流控制的相关方法，业务相关，供flow/model/proc.js的方法进行调用<br/>\n具体的业务相关的工作流子类可以继承本类，来增加定制的业务逻辑"
        },
        "flow.model.task_act": {
            "name": "flow.model.task_act",
            "shortname": "flow.model.task_act",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "demo.model",
            "namespace": "",
            "file": "src\\flow\\model\\task_act.js",
            "line": 10,
            "description": "提供工作流的活动节点运转的相关方法，业务相关，供flow/model/act.js的方法进行调用<br/>\n具体的业务相关的工作流活动的子类可以继承本类，来增加定制的业务逻辑"
        },
        "flow.model.task_act_appr": {
            "name": "flow.model.task_act_appr",
            "shortname": "flow.model.task_act_appr",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "demo.model",
            "namespace": "",
            "file": "src\\flow\\model\\task_act_appr.js",
            "line": 10,
            "description": "提供审核类工作流的活动节点运转的相关方法，业务相关，供flow/model/act.js的方法进行调用，在act配置的时候可以设置<br/>\n具体的业务相关的工作流活动的子类也可以继承本类，来增加定制的业务逻辑"
        },
        "cmpage.cmpage_global_flow": {
            "name": "cmpage.cmpage_global_flow",
            "shortname": "cmpage.cmpage_global_flow",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "cmpage.model",
            "namespace": "",
            "file": "src\\flow\\cmpage_global_flow.js",
            "line": 7,
            "description": "cmpage的全局方法和变量设置，置入（Object.assign）thinkjs 的 global 中\nflow工作流相关部分"
        }
    },
    "classitems": [
        {
            "file": "src\\admin\\controller\\base.js",
            "line": 27,
            "description": "本模块的所有action执行前的检查项",
            "itemtype": "method",
            "name": "__before",
            "return": {
                "description": "当前用户未登录时，返回错误信息或者引导到登录页面",
                "type": "Promise"
            },
            "class": "admin.controller.base",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 20,
            "description": "取代码树，输入根节点ID为参数 <br/>\n点击某个节点，右侧显示其子节点列表，增删改后更新左侧树 <br/>\nRUL调用如：/admin/code_tree?rootid=1 <br/>",
            "itemtype": "method",
            "name": "codeTree",
            "return": {
                "description": "代码树页面",
                "type": "Promise"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 38,
            "description": "参数选择，查找带回页面，输入根节点ID为参数 <br/>\n点击某个节点，右侧显示其子节点列表，选择后返回 <br/>\nRUL调用如：/admin/code/code_lookup?rootid=1185*multiselect=false <br/>",
            "itemtype": "method",
            "name": "codeLookup",
            "return": {
                "description": "参数选择页面",
                "type": "Promise"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 56,
            "description": "账套用户设置的主界面",
            "itemtype": "method",
            "name": "groupUserMain",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 68,
            "description": "增加某帐套的用户",
            "itemtype": "method",
            "name": "groupUserAdd",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 81,
            "description": "删除某帐套的用户",
            "itemtype": "method",
            "name": "groupUserDel",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 91,
            "description": "团队用户设置的主界面",
            "itemtype": "method",
            "name": "teamUserMain",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 103,
            "description": "增加某团队的用户",
            "itemtype": "method",
            "name": "teamUserAdd",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 116,
            "description": "删除某团队的用户",
            "itemtype": "method",
            "name": "teamUserDel",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 126,
            "description": "角色权限设置主界面",
            "itemtype": "method",
            "name": "rolePrivilege",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 139,
            "description": "某个角色的权限集合展示，树状结构",
            "itemtype": "method",
            "name": "roleGetPrivilegeTree",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 151,
            "description": "保存某个角色的权限设置",
            "itemtype": "method",
            "name": "roleSavePrivilege",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 163,
            "description": "某个用户的权限集合展示，树状结构",
            "itemtype": "method",
            "name": "userGetPrivilegeTree",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 182,
            "description": "保存某个用户的定制权限设置",
            "itemtype": "method",
            "name": "userSavePrivilege",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 194,
            "description": "保存某个用户的定制权限设置",
            "itemtype": "method",
            "name": "userSavePrivilege",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\code.js",
            "line": 210,
            "description": "代码树，输入根节点ID为参数 ------- 以下3个操作已废弃，改用 codeTreeAction -----------\n直接通过树增删改节点\n/admin/code?rootid=1",
            "class": "admin.controller.code",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\index.js",
            "line": 21,
            "description": "系统首页，加载符合权限的菜单、加载前端BJUI框架等",
            "itemtype": "method",
            "name": "index",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin.controller.index",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\index.js",
            "line": 50,
            "description": "用户密码修改页面，get方式显示编辑页面，post方式执行密码修改",
            "itemtype": "method",
            "name": "loginPwdEdit",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin.controller.index",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\index.js",
            "line": 94,
            "description": "用户登录界面，get方式显示登录页面，post方式执行用户登录，如果成功则将用户信息写入session并引导到index页面,\n期间判断是否有权限登录所选择的账套",
            "itemtype": "method",
            "name": "login",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin.controller.index",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\index.js",
            "line": 155,
            "description": "用户登出，清除session中的用户信息并引导至用户登录页面",
            "itemtype": "method",
            "name": "exitLogin",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin.controller.index",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\index.js",
            "line": 166,
            "description": "用户密码修改页面，get方式显示编辑页面，post方式执行密码修改",
            "itemtype": "method",
            "name": "loginPwdEdit",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "admin.controller.index",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\mob.js",
            "line": 21,
            "description": "取APP的版本信息，用户比较APP的版本，并自动更新资源包",
            "itemtype": "method",
            "name": "getVersion",
            "return": {
                "description": "版本信息，包括新版资源包的URL",
                "type": "Json"
            },
            "class": "admin.controller.mob",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\mob.js",
            "line": 31,
            "description": "取账套列表",
            "itemtype": "method",
            "name": "getGroups",
            "return": {
                "description": "HTML片段，用于下拉选择登陆账套等",
                "type": "Json"
            },
            "class": "admin.controller.mob",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\mob.js",
            "line": 50,
            "description": "取APP菜单和按钮的列表",
            "itemtype": "method",
            "name": "getMenus",
            "return": {
                "description": "备注中设置'btn'的为按钮，其他为菜单",
                "type": "Json"
            },
            "class": "admin.controller.mob",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\mob.js",
            "line": 82,
            "description": "用户登录,包括验证账套、角色等",
            "itemtype": "method",
            "name": "login",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.mob",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\mob.js",
            "line": 117,
            "description": "退出登录,同时注销session 设置",
            "itemtype": "method",
            "name": "exitLogin",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.mob",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\controller\\mob.js",
            "line": 128,
            "description": "修改用户密码",
            "itemtype": "method",
            "name": "loginPwdEdit",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "admin.controller.mob",
            "module": "admin.controller"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 26,
            "description": "用递归法从t_code缓存中返回所有子节点",
            "itemtype": "method",
            "name": "getTreeList",
            "return": {
                "description": "所有子节点组成的数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "rootID",
                    "description": "根节点的ID",
                    "type": "Int"
                },
                {
                    "name": "selfContains",
                    "description": "是否加入自身节点",
                    "type": "Bool",
                    "optional": true
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 63,
            "description": "根据参数ID取参数的名称，一般用于页面模块配置中的‘替换’调用: admin/cdoe:getNameById",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "参数名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "参数ID",
                    "type": "Int"
                },
                {
                    "name": "fieldNames",
                    "description": "字段名称,逗号分隔",
                    "type": "String"
                },
                {
                    "name": "joinStr",
                    "description": "连接的字符串",
                    "type": "String"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 95,
            "description": "根据参数ID取参数的记录对象",
            "itemtype": "method",
            "name": "getCodeById",
            "return": {
                "description": "参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "参数ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 110,
            "description": "根据父节点ID取参数列表",
            "itemtype": "method",
            "name": "getCodesByPid",
            "return": {
                "description": "参数列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "pid",
                    "description": "父节点ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 126,
            "description": "根据根节点ID取参数列表，树状",
            "itemtype": "method",
            "name": "getCodesByRoot",
            "return": {
                "description": "参数列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "rootID",
                    "description": "根节点ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 142,
            "description": "根据参数值取性别，一般用于页面模块配置中的‘替换’调用: admin/cdoe:getSexName",
            "itemtype": "method",
            "name": "getSexName",
            "return": {
                "description": "性别",
                "type": "String"
            },
            "params": [
                {
                    "name": "value",
                    "description": "默认值",
                    "type": "Bool",
                    "optional": true
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 151,
            "description": "取参数列表，带Parm的这几个方法一般是用户业务相关的参数，根节点ID === 4，用缓存",
            "itemtype": "method",
            "name": "getParms",
            "return": {
                "description": "参数列表",
                "type": "Array"
            },
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 161,
            "description": "根据父节点ID取参数列表",
            "itemtype": "method",
            "name": "getParmsByPid",
            "return": {
                "description": "参数列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "pid",
                    "description": "父节点ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 179,
            "description": "根据父节点的c_object值取参数列表",
            "itemtype": "method",
            "name": "getParmsByPobj",
            "return": {
                "description": "参数列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "pobj",
                    "description": "父节点的c_object",
                    "type": "String"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 189,
            "description": "根据参数ID取参数的记录对象",
            "itemtype": "method",
            "name": "getParmById",
            "return": {
                "description": "参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "参数ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 204,
            "description": "根据参数的c_object值取参数的记录对象",
            "itemtype": "method",
            "name": "getParmById",
            "return": {
                "description": "参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "obj",
                    "description": "参数的c_object",
                    "type": "String"
                }
            ],
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 220,
            "description": "清空t_code表的相关缓存",
            "itemtype": "method",
            "name": "clearCodeCache",
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 234,
            "description": "取账套列表，树状，可以用于页面模块配置中的‘下拉框选择’调用: admin/cdoe:getGroups",
            "itemtype": "method",
            "name": "getGroups",
            "return": {
                "description": "账套列表",
                "type": "Array"
            },
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 245,
            "description": "取角色列表，可以用于页面模块配置中的‘下拉框选择’调用: admin/cdoe:getRoles",
            "itemtype": "method",
            "name": "getRoles",
            "return": {
                "description": "角色列表",
                "type": "Array"
            },
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 256,
            "description": "取仓库列表，可以用于页面模块配置中的‘下拉框选择’调用: admin/cdoe:getStocks",
            "itemtype": "method",
            "name": "getStocks",
            "return": {
                "description": "仓库列表",
                "type": "Array"
            },
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 267,
            "description": "取部门列表，树状，可以用于页面模块配置中的‘下拉框选择’调用: admin/cdoe:getDepts",
            "itemtype": "method",
            "name": "getDepts",
            "return": {
                "description": "部门列表",
                "type": "Array"
            },
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code.js",
            "line": 278,
            "description": "取t_code全表记录，缓存",
            "itemtype": "method",
            "name": "getCodes",
            "return": {
                "description": "t_code记录列表",
                "type": "Array"
            },
            "class": "admin.model.code",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code_list.js",
            "line": 19,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，组合成新的Where子句",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "class": "admin.model.code_list",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code_list.js",
            "line": 29,
            "description": "重写父类的 pageEditInit 方法，对初始化编辑页面的值进行修改",
            "itemtype": "method",
            "name": "pageEditInit",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "class": "admin.model.code_list",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code_list.js",
            "line": 45,
            "description": "重写父类的 pageSave 方法，保存参数后清除code表的缓存",
            "itemtype": "method",
            "name": "pageSave",
            "return": {
                "description": "保存的数据表记录的对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "parms",
                    "description": "编辑页面传回的FORM参数",
                    "type": "Object"
                }
            ],
            "class": "admin.model.code_list",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code_list.js",
            "line": 68,
            "description": "删除记录,<br/>\n子类中可以重写本方法，实现其他的删除逻辑，如判断是否可以删除，删除相关联的其他记录等等",
            "itemtype": "method",
            "name": "pageDelete",
            "return": {
                "description": "记录对象",
                "type": "Object"
            },
            "class": "admin.model.code_list",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\code_lookup.js",
            "line": 19,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，组合成新的Where子句",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.code_lookup",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\groupuser.js",
            "line": 22,
            "description": "重写父类的 htmlGetOther 方法，输出额外的按钮和js函数",
            "itemtype": "method",
            "name": "htmlGetOther",
            "return": {
                "description": "html片段",
                "type": "String"
            },
            "class": "admin.model.groupuser",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\groupuser.js",
            "line": 66,
            "description": "取某个用户登录账套及其所有子帐套",
            "itemtype": "method",
            "name": "getLoginGroups",
            "return": {
                "description": "账套ID组成的字符串，如： 1,2,3",
                "type": "String"
            },
            "params": [
                {
                    "name": "userID",
                    "description": "用户ID",
                    "type": "Int"
                },
                {
                    "name": "groupID",
                    "description": "当前登录的账套ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.groupuser",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\groupuser_add.js",
            "line": 21,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，剔除已经加入该账套的用户，组合成新的Where子句",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.groupuser_add",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\groupuser_add.js",
            "line": 31,
            "description": "重写父类的 htmlGetOther 方法，输出额外的按钮和js函数，",
            "itemtype": "method",
            "name": "htmlGetOther",
            "return": {
                "description": "html片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.groupuser_add",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\log.js",
            "line": 21,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，剔除已经加入该账套的用户，组合成新的Where子句",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.log",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\log.js",
            "line": 35,
            "description": "增加操作日志",
            "itemtype": "method",
            "name": "addLog",
            "return": {
                "description": "日志记录ID",
                "type": "Int"
            },
            "params": [
                {
                    "name": "user",
                    "description": "用户对象",
                    "type": "Int"
                },
                {
                    "name": "msg",
                    "description": "日志内容",
                    "type": "String"
                },
                {
                    "name": "moduleID",
                    "description": "业务模块ID",
                    "type": "Int"
                },
                {
                    "name": "linkID",
                    "description": "关联的记录ID",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "logStatus",
                    "description": "日志状态， cmpage.enum",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "logType",
                    "description": "日志类型，cmpage.enum",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "admin.model.log",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\login.js",
            "line": 21,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，组合成新的Where子句, 取当前用户的登录信息",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.login",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\login.js",
            "line": 34,
            "description": "增加某个用户的登录信息",
            "itemtype": "method",
            "name": "addLogin",
            "return": {
                "description": "登录记录ID",
                "type": "Int"
            },
            "params": [
                {
                    "name": "user",
                    "description": "登录用户对象",
                    "type": "Object"
                }
            ],
            "class": "admin.model.login",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\login.js",
            "line": 54,
            "description": "某个用户的退出登录信息",
            "itemtype": "method",
            "name": "addLogin",
            "params": [
                {
                    "name": "user",
                    "description": "登录用户对象",
                    "type": "Object"
                }
            ],
            "class": "admin.model.login",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\privilege.js",
            "line": 20,
            "description": "保存某个角色的权限设置",
            "itemtype": "method",
            "name": "roleSavePrivilege",
            "return": {
                "description": "保存的记录条数",
                "type": "Int"
            },
            "params": [
                {
                    "name": "parms",
                    "description": "前端递交的参数，包括roleID, 用户ID（多个，以逗号分隔）",
                    "type": "Object"
                }
            ],
            "class": "admin.model.privilege",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\privilege.js",
            "line": 36,
            "description": "某个角色的权限树 <br/>\n允许优先原则，即没有明确禁止的权限都为允许",
            "itemtype": "method",
            "name": "roleGetPrivilegeTree",
            "return": {
                "description": "权限记录的数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "roleID",
                    "description": "角色ID",
                    "type": "Int"
                },
                {
                    "name": "rootID",
                    "description": "权限树的根节点ID，可以是权限树的子树的根节点",
                    "type": "RootID"
                }
            ],
            "class": "admin.model.privilege",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\privilege.js",
            "line": 60,
            "description": "某个用户定制的的权限树，如果没有则返回该用户所属角色的权限树 <br/>\n允许优先原则，即没有明确禁止的权限都为允许",
            "itemtype": "method",
            "name": "userGetPrivilegeTree",
            "return": {
                "description": "权限记录的数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "userID",
                    "description": "用户ID",
                    "type": "Int"
                },
                {
                    "name": "roleID",
                    "description": "角色ID",
                    "type": "Int"
                },
                {
                    "name": "rootID",
                    "description": "权限树的根节点ID，可以是权限树的子树的根节点",
                    "type": "RootID"
                }
            ],
            "class": "admin.model.privilege",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\privilege.js",
            "line": 89,
            "description": "保存某个用户的权限设置",
            "itemtype": "method",
            "name": "userSavePrivilege",
            "return": {
                "description": "保存的记录条数",
                "type": "Int"
            },
            "params": [
                {
                    "name": "parms",
                    "description": "前端递交的参数，包括userID, 权限ID（多个，以逗号分隔）",
                    "type": "Object"
                }
            ],
            "class": "admin.model.privilege",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\teamuser.js",
            "line": 21,
            "description": "重写父类的 htmlGetOther 方法，输出额外的按钮和js函数",
            "itemtype": "method",
            "name": "htmlGetOther",
            "return": {
                "description": "html片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.teamuser",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\teamuser.js",
            "line": 65,
            "description": "根据团队ID取团队的成员列表，可用于页面模块配置中的‘替换’调用: admin/teamuser:getUsersByTeamId",
            "itemtype": "method",
            "name": "getUsersByTeamId",
            "return": {
                "description": "团队成员列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "teamID",
                    "description": "团队ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.teamuser",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\teamuser.js",
            "line": 76,
            "description": "判断某个用户是否是某个团队的成员",
            "itemtype": "method",
            "name": "isTeamMember",
            "return": {
                "description": "是否是成员",
                "type": "Boolean"
            },
            "params": [
                {
                    "name": "teamID",
                    "description": "团队ID",
                    "type": "Int"
                },
                {
                    "name": "userID",
                    "description": "用户ID",
                    "type": "Int"
                },
                {
                    "name": "users",
                    "description": "成员列表，用来改善性能, 可选项",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "admin.model.teamuser",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\teamuser_add.js",
            "line": 21,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，剔除已经加入该团队的用户，组合成新的Where子句",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.teamuser_add",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\teamuser_add.js",
            "line": 32,
            "description": "重写父类的 htmlGetOther 方法，输出额外的按钮和js函数，",
            "itemtype": "method",
            "name": "htmlGetOther",
            "return": {
                "description": "html片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.teamuser_add",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\user.js",
            "line": 20,
            "description": "重写父类的 getQueryWhere 方法，增加页面模块的条件设置，组合成新的Where子句, c_linktype==1表示关联的是集团用户: c_link = t_emp.id",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where条件子句",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                }
            ],
            "class": "admin.model.user",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\user.js",
            "line": 31,
            "description": "重写父类的 pageSave 方法，保存参数后清除user的缓存",
            "itemtype": "method",
            "name": "pageSave",
            "return": {
                "description": "保存的数据表记录的对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面设置主信息",
                    "type": "Object"
                },
                {
                    "name": "parms",
                    "description": "编辑页面传回的FORM参数",
                    "type": "Object"
                }
            ],
            "class": "admin.model.user",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\user.js",
            "line": 62,
            "description": "根据用户ID取用户名称，一般用于页面模块配置中的‘替换’调用: admin/user:getNameById",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "用户名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "用户ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.user",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\user.js",
            "line": 77,
            "description": "根据用户ID取用户对象",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "用户对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "用户ID",
                    "type": "Int"
                }
            ],
            "class": "admin.model.user",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\user.js",
            "line": 92,
            "description": "根据用户登录名和密码取用户记录对象，",
            "itemtype": "method",
            "name": "getUserByLogin",
            "return": {
                "description": "用户信息",
                "type": "Object"
            },
            "params": [
                {
                    "name": "loginName",
                    "description": "登录名",
                    "type": "String"
                },
                {
                    "name": "loginPwd",
                    "description": "登录密码",
                    "type": "String"
                },
                {
                    "name": "isMd5",
                    "description": "是否是MD5加密过的",
                    "type": "Bool"
                }
            ],
            "class": "admin.model.user",
            "module": "admin.model"
        },
        {
            "file": "src\\admin\\model\\user.js",
            "line": 112,
            "description": "取vw_user的记录，缓存， 按名称排序",
            "itemtype": "method",
            "name": "getUsers",
            "return": {
                "description": "vw_user记录列表",
                "type": "Array"
            },
            "class": "admin.model.user",
            "module": "admin.model"
        },
        {
            "file": "src\\cmpage\\config\\config.js",
            "line": 2,
            "description": "config",
            "class": "cmpage.controller.base",
            "module": "admin.model"
        },
        {
            "file": "src\\cmpage\\controller\\base.js",
            "line": 29,
            "description": "删除记录的URL接口，调用： /cmpage/xxx/delete?id=xxx",
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "删除成功状态",
                "type": "Json"
            },
            "class": "cmpage.controller.base",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\base.js",
            "line": 51,
            "description": "本模块的所有action执行前的检查项",
            "itemtype": "method",
            "name": "__before",
            "return": {
                "description": "当前用户未登录时，返回错误信息或者引导到登录页面",
                "type": "Promise"
            },
            "class": "cmpage.controller.base",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\mob.js",
            "line": 21,
            "description": "业务模块展示的主界面，分页列表，POST调用： /cmpage/mob/list",
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "包含HTML片段",
                "type": "Json"
            },
            "class": "cmpage.controller.mob",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\mob.js",
            "line": 91,
            "description": "业务模块的编辑页面，调用： /cmpage/mob/edit",
            "itemtype": "method",
            "name": "edit",
            "return": {
                "description": "包含HTML片段",
                "type": "Json"
            },
            "class": "cmpage.controller.mob",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\mob.js",
            "line": 118,
            "description": "保存业务模块记录信息， POST调用： /cmpage/mob/save",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.mob",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\mob.js",
            "line": 151,
            "description": "业务模块的查看页面，一般调用： /cmpage/mob/view",
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.mob",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 24,
            "description": "模块主信息设置，分页列表，调用： /cmpage/module/list",
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 61,
            "description": "保存模块主信息记录， POST调用： /cmpage/module/save",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "[]",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 97,
            "description": "复制模块设置， 调用： /cmpage/module/copy?modulename=xxx",
            "itemtype": "method",
            "name": "copy",
            "return": {
                "description": "复制是否成功的信息",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 112,
            "description": "模块主表编辑页面，调用：/cmpage/module/edit?id=xxx",
            "itemtype": "method",
            "name": "edit",
            "return": {
                "description": "HTML页面",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 138,
            "description": "模块主表编辑页面，调用：/cmpage/module/reset_module_cache",
            "itemtype": "method",
            "name": "resetModuleCache",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 151,
            "description": "模块显示列编辑页面，调用：/cmpage/module/col_list?moduleid=xxx",
            "itemtype": "method",
            "name": "colList",
            "return": {
                "description": "HTML页面",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 174,
            "description": "重新设置模块显示列，调用：/cmpage/module/col_reset?moduleid=xxx",
            "itemtype": "method",
            "name": "colReset",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 188,
            "description": "保存显示列设置， POST调用： /cmpage/module/col_save",
            "itemtype": "method",
            "name": "col_save",
            "return": {
                "description": "保存记录的状态信息",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 237,
            "description": "模块显示列编辑页面，调用：/cmpage/module/edit_list?moduleid=xxx",
            "itemtype": "method",
            "name": "editList",
            "return": {
                "description": "HTML页面",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 258,
            "description": "重新设置模块编辑列，调用：/cmpage/module/edit_reset?moduleid=xxx",
            "itemtype": "method",
            "name": "editReset",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 270,
            "description": "保存业务模块编辑列的设置， POST调用： /cmpage/module/edit_save",
            "itemtype": "method",
            "name": "edit_save",
            "return": {
                "description": "保存记录的状态信息",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 316,
            "description": "模块查询列编辑页面，调用：/cmpage/module/query_list?moduleid=xxx",
            "itemtype": "method",
            "name": "queryList",
            "return": {
                "description": "HTML页面",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 338,
            "description": "重新设置模块查询列，调用：/cmpage/module/query_reset?moduleid=xxx",
            "itemtype": "method",
            "name": "queryReset",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 352,
            "description": "删除不显示的查询列设置， POST调用： /cmpage/module/query_delete_no_show",
            "itemtype": "method",
            "name": "query_delete_no_show",
            "return": {
                "description": "状态信息",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 365,
            "description": "保存业务模块查询列的设置， POST调用： /cmpage/module/query_save",
            "itemtype": "method",
            "name": "query_save",
            "return": {
                "description": "保存记录的状态信息",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 410,
            "description": "模块按钮设置页面，调用：/cmpage/module/btn_list?moduleid=xxx",
            "itemtype": "method",
            "name": "btnList",
            "return": {
                "description": "HTML页面",
                "type": "Promise"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 429,
            "description": "重新设置模块按钮，调用：/cmpage/module/btn_reset?moduleid=xxx",
            "itemtype": "method",
            "name": "btnReset",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\module.js",
            "line": 442,
            "description": "保存业务模块的按钮设置， POST调用： /cmpage/module/btn_save",
            "itemtype": "method",
            "name": "btn_save",
            "return": {
                "description": "保存记录的状态信息",
                "type": "Json"
            },
            "class": "cmpage.controller.module",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 21,
            "description": "业务模块展示的主界面，分页列表，一般调用： /cmpage/page/list?modulename=xxx",
            "itemtype": "method",
            "name": "list",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 92,
            "description": "模块主界面，导出excel文件，一般调用： /cmpage/page/excel_export?modulename=xxx",
            "itemtype": "method",
            "name": "excelExport",
            "return": {
                "description": "excel文件",
                "type": "File"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 140,
            "description": "删除记录的URL接口，调用： /cmpage/page/delete?modulename=xxx&id=xxx&flag=false</br>\nflag=true: 记录真删除，否则修改记录状态 c_status = -1",
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "删除成功状态",
                "type": "Json"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 160,
            "description": "修改状态，供界面按钮直接调用，工作流相关方法（状态流转类）</br>\n调用： /cmpage/page/update_status?modulename=xxx&id=xxx&actID=xxx&status=xxx",
            "itemtype": "method",
            "name": "updateStatus",
            "return": {
                "description": "执行修改后的返回信息",
                "type": "Json"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 180,
            "description": "业务模块的编辑页面，一般调用： /cmpage/page/edit?modulename=xxx",
            "itemtype": "method",
            "name": "edit",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 213,
            "description": "业务模块的编辑页面，主从页面，一般调用： /cmpage/page/edit_ms?modulename=xxx",
            "itemtype": "method",
            "name": "editMs",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 245,
            "description": "保存业务模块记录信息， POST调用： /cmpage/page/save",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 291,
            "description": "业务模块的查看页面，一般调用： /cmpage/page/view?modulename=xxx",
            "itemtype": "method",
            "name": "view",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 316,
            "description": "主从业务模块的查看页面，一般调用： /cmpage/page/view_ms?modulename=xxx",
            "itemtype": "method",
            "name": "viewMs",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 344,
            "description": "业务模块的编辑页面，主从页面，一般调用： /cmpage/page/print?modulename=xxx",
            "itemtype": "method",
            "name": "print",
            "return": {
                "description": "HTML片段",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 368,
            "description": "查找带回页面，一般调用： /cmpage/page/lookup?modulename=xxx&multiselect=false",
            "itemtype": "method",
            "name": "lookup",
            "return": {
                "description": "分页列表数据，字段是否返回的设置 c_isview (模块显示列设置)",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 431,
            "description": "上传文件的URL接口，调用： /cmpage/page/upload_file </br>\n如果多个文件上传，则前端循环调用本接口",
            "itemtype": "method",
            "name": "updateFile",
            "return": {
                "description": "状态，包含保存后的路径名称，可以作为前端的表单项保存",
                "type": "Json"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\page.js",
            "line": 467,
            "description": "时间轴展示页面，一般调用： /cmpage/page/timeline?modulename=xxx",
            "itemtype": "method",
            "name": "timeline",
            "return": {
                "description": "时间轴列表数据，取模块的显示列设置",
                "type": "Promise"
            },
            "class": "cmpage.controller.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 35,
            "description": "根据URL参数直接调用相关model的相关方法， 调用： /cmpage/utils/callFunction?model=xxx&fn=xxx&parms=xxx,xxx",
            "itemtype": "method",
            "name": "callFunction",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.utils",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 68,
            "description": "根据URL参数直接调用相关model的相关方法， 调用： /cmpage/utils/callFunction?model=xxx&fn=xxx&parms=xxx,xxx",
            "itemtype": "method",
            "name": "callFunction",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.utils",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 105,
            "description": "清除缓存， 调用： /cmpage/utils/clear_cache",
            "itemtype": "method",
            "name": "clearCache",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.utils",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 119,
            "description": "根据省份取城市列表， 调用： /cmpage/utils/get_citys?province=xxx",
            "itemtype": "method",
            "name": "getCitys",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.utils",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\utils.js",
            "line": 132,
            "description": "根据城市取区县列表， 调用： /cmpage/utils/get_countrys?city=xxx",
            "itemtype": "method",
            "name": "getCountrys",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "cmpage.controller.utils",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\controller\\wechat.js",
            "line": 18,
            "description": "index action",
            "return": {
                "description": "[]",
                "type": "Promise"
            },
            "class": "cmpage.logic.page",
            "module": "cmpage.controller"
        },
        {
            "file": "src\\cmpage\\logic\\page.js",
            "line": 27,
            "description": "调用 cmpage/page/save 之前系统自动调用本方法验证表单数据",
            "itemtype": "method",
            "name": "save",
            "return": {
                "description": "如有错误，返回错误信息",
                "type": "Json"
            },
            "class": "cmpage.logic.page",
            "module": "cmpage.logic"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 29,
            "description": "取省份记录， 缓存, 可以用于页面模块配置中的‘下拉框选择’调用: cmpage/area:getProvinces",
            "itemtype": "method",
            "name": "getProvinces",
            "return": {
                "description": "省份记录列表",
                "type": "Array"
            },
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 40,
            "description": "根据省份编码取省份名称，一般用于页面模块配置中的‘替换’调用: cmpage/area:getProvinceName",
            "itemtype": "method",
            "name": "getProvinceName",
            "return": {
                "description": "名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "province",
                    "description": "编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 59,
            "description": "根据城市编码取城市名称，一般用于页面模块配置中的‘替换’调用: cmpage/area:getCityName",
            "itemtype": "method",
            "name": "getCityName",
            "return": {
                "description": "名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "city",
                    "description": "编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 78,
            "description": "根据区县编码取区县名称，一般用于页面模块配置中的‘替换’调用: cmpage/area:getCountryName",
            "itemtype": "method",
            "name": "getCountryName",
            "return": {
                "description": "名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "country",
                    "description": "编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 97,
            "description": "取城市记录， 缓存, 可以用于页面模块配置中的‘下拉框选择’调用: cmpage/area:getCitys",
            "itemtype": "method",
            "name": "getCitys",
            "return": {
                "description": "城市记录列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "province",
                    "description": "省份编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 109,
            "description": "取区县记录， 缓存, 可以用于页面模块配置中的‘下拉框选择’调用: cmpage/area:getCountrys",
            "itemtype": "method",
            "name": "getCountrys",
            "return": {
                "description": "区县记录列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "province",
                    "description": "城市编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 121,
            "description": "取省份信息，组成省份选择的下拉项HTML",
            "itemtype": "method",
            "name": "getProvinceItems",
            "return": {
                "description": "下拉项的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "value",
                    "description": "省份编码，当前值",
                    "type": "String"
                },
                {
                    "name": "hasEmptyItem",
                    "description": "是否有空项，一般查询HTML输出时用到",
                    "type": "Bool"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 141,
            "description": "取城市信息，组成城市选择的下拉项HTML",
            "itemtype": "method",
            "name": "getCityItems",
            "return": {
                "description": "下拉项的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "value",
                    "description": "城市编码，当前值",
                    "type": "String"
                },
                {
                    "name": "hasEmptyItem",
                    "description": "是否有空项，一般查询HTML输出时用到",
                    "type": "Bool"
                },
                {
                    "name": "provinceValue",
                    "description": "当前省份编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\area.js",
            "line": 166,
            "description": "取区县信息，组成区县选择的下拉项HTML",
            "itemtype": "method",
            "name": "getCountryItems",
            "return": {
                "description": "下拉项的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "value",
                    "description": "城市编码，当前值",
                    "type": "String"
                },
                {
                    "name": "hasEmptyItem",
                    "description": "是否有空项，一般查询HTML输出时用到",
                    "type": "Bool"
                },
                {
                    "name": "cityValue",
                    "description": "当前城市编码",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.area",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\base.js",
            "line": 33,
            "description": "constructor",
            "params": [
                {
                    "name": "name",
                    "description": "[description]",
                    "type": "[type]"
                },
                {
                    "name": "config",
                    "description": "[description]",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "cmpage.model.base",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\base.js",
            "line": 51,
            "description": "创建连接",
            "return": {
                "description": "[description]",
                "type": "[type]"
            },
            "class": "cmpage.model.base",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\base.js",
            "line": 115,
            "description": "执行原生SQL语句，取结果集返回",
            "return": {
                "description": "查询结果集",
                "type": "Array"
            },
            "params": [
                {
                    "name": "sql",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "参数设置",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.base",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\file_list.js",
            "line": 22,
            "description": "取模块列表中的MUI设置，组合成HTML输出，一般在子类中通过重写这个方法来达到页面定制的效果",
            "itemtype": "method",
            "name": "mobHtmlGetList",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.file_list",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\module.js",
            "line": 415,
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\module.js",
            "line": 504,
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 32,
            "description": "初始化设置页面参数",
            "itemtype": "method",
            "name": "initPage",
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 48,
            "description": "取查询项的设置，组合成HTML输出",
            "itemtype": "method",
            "name": "htmlGetQuery",
            "return": {
                "description": "查询的HTML片段，包括 bjui-moreSearch 部分",
                "type": "Array"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 117,
            "description": "输出额外的按钮和js函数和HTML片段，区别于 getPageOther",
            "itemtype": "method",
            "name": "htmlGetOther",
            "return": {
                "description": "html片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 126,
            "description": "取下拉框的选项集",
            "itemtype": "method",
            "name": "getOptions",
            "return": {
                "description": "下拉框选项的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "md",
                    "description": "下拉项的设置，其中md.c_default为默认值，可以在调用本方法前修改",
                    "type": "Object"
                },
                {
                    "name": "isBlank",
                    "description": "下拉项中是否增加空项，一般查询项是需要的",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 179,
            "description": "取树状下拉框的选项集",
            "itemtype": "method",
            "name": "getOptionsTree",
            "return": {
                "description": "查询的HTML片段，包括 bjui-moreSearch 部分",
                "type": "Array"
            },
            "params": [
                {
                    "name": "md",
                    "description": "下拉项的设置，其中md.c_default为默认值，可以在调用本方法前修改",
                    "type": "Object"
                },
                {
                    "name": "isBlank",
                    "description": "下拉项中是否增加空项，一般查询项是需要的",
                    "type": "Bool",
                    "optional": true,
                    "optdefault": "false"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 228,
            "description": "根据设置取显示的替换值",
            "itemtype": "method",
            "name": "getReplaceText",
            "return": {
                "description": "替换的字符串",
                "type": "String"
            },
            "params": [
                {
                    "name": "value",
                    "description": "当前值",
                    "type": "String"
                },
                {
                    "name": "replaceItems",
                    "description": "替换的设置值，支持两种方式\n                     1. 函数如：admin/code:getXXXXXX\n                     2. json如：[{value:true,text:'男'},{value:false,text:'女'}]",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 267,
            "description": "取顶部按钮的设置，分靠左和靠右两块，组合成HTML输出",
            "itemtype": "method",
            "name": "htmlGetBtnHeader",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 309,
            "description": "取记录列表每一行的按钮设置，组合成HTML输出，子类中重写本方法可以定制每行按钮的输出效果",
            "itemtype": "method",
            "name": "htmlGetBtnList",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "rec",
                    "description": "每行的记录对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 365,
            "description": "取分页列表的设置，结合结果数据集，组合成HTML输出，一般不需要重新本方法",
            "itemtype": "method",
            "name": "htmlGetList",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 460,
            "description": "是否显示列表中某行的某个按钮，子类中重写本方法可以改变行按钮显示的逻辑\n按钮设置的备注中，形如： {isShow:'#c_status#==1192 && xxx>xxx'}",
            "itemtype": "method",
            "name": "isShowBtn",
            "return": {
                "description": "是否显示",
                "type": "Boolean"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 480,
            "description": "取结果数据集，子类中重写本方法可以增加逻辑如：对结果集做进一步的数据处理等",
            "itemtype": "method",
            "name": "getDataList",
            "return": {
                "description": "结果集数据包 {count:xxx, list:[{record}]}",
                "type": "Object"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 530,
            "description": "取合计行的HTML片段，子类中重写本方法可以定制合计行的显示",
            "itemtype": "method",
            "name": "isShowBtn",
            "return": {
                "description": "合计行的HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 561,
            "description": "取查询项的设置，结合POST参数，得到Where字句，重写本方法可以定制或修改SQL的where子句",
            "itemtype": "method",
            "name": "getQueryWhere",
            "return": {
                "description": "where 子句， 形如： where xxx and xxx",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 628,
            "description": "根据设置取得页面显示列表返回的字段，一般不需要重写本方法",
            "itemtype": "method",
            "name": "getListFields",
            "return": {
                "description": "fields 部分， 形如：id,c_name,xxx",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 650,
            "description": "新增的时候，初始化编辑页面的值，子类重写本方法可以定制新增页面的初始值",
            "itemtype": "method",
            "name": "pageEditInit",
            "return": {
                "description": "新增的记录对象",
                "type": "Object"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 692,
            "description": "取当前记录对象，用于新增和修改的编辑页面展示",
            "itemtype": "method",
            "name": "getDataRecord",
            "return": {
                "description": "当前记录对象",
                "type": "Object"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 724,
            "description": "取编辑页面的设置，组合成列表数据的HTML输出",
            "itemtype": "method",
            "name": "htmlGetEdit",
            "return": {
                "description": "HTML页面片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 862,
            "description": "改变某些编辑列的样式，子类中可以重写本方法类增加模块编辑页面的操作逻辑",
            "itemtype": "method",
            "name": "htmlGetEditInput",
            "return": {
                "description": "Edit页面的Input的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "col",
                    "description": "Edit页面的当前编辑列设置",
                    "type": "Object"
                },
                {
                    "name": "colValue",
                    "description": "Input的值",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "Edit页面的Input的HTML片段",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 877,
            "description": "取编辑页面的按钮设置，组合按钮的HTML输出",
            "itemtype": "method",
            "name": "htmlGetEditBtns",
            "return": {
                "description": "HTML页面片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 974,
            "description": "取状态流转类型的流程节点相关的按钮设置，组合成按钮的HTML输出</br>\n考虑到按钮输出和业务关联度大，定义在此处",
            "itemtype": "method",
            "name": "htmlGetActBtns",
            "return": {
                "description": "按钮数组",
                "type": "Array"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1106,
            "description": "取流程节点相关的按钮设置，组合按钮的HTML输出</br>\n考虑到按钮输出和业务关联度大，定义在此处",
            "itemtype": "method",
            "name": "htmlGetTaskActBtns",
            "return": {
                "description": "按钮数组",
                "type": "Array"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1206,
            "description": "编辑页面保存,<br/>\n如果是多个表的数据产生的编辑页，则根据存在于this.mod.c_table中的列更新表，一般需要在子类中继承，例如： admin/user:pageSave",
            "itemtype": "method",
            "name": "pageSave",
            "return": {
                "description": "如果有验证错误，则返回格式： {statusCode:300, message:'xxxxxx'}",
                "type": "Object"
            },
            "params": [
                {
                    "name": "parms",
                    "description": "前端传入的FORM参数",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1239,
            "description": "保存后的操作日志记录,，通过重写可在子类中定制日志的格式",
            "itemtype": "method",
            "name": "pageSaveLog",
            "return": {
                "description": "",
                "type": "无"
            },
            "params": [
                {
                    "name": "parms",
                    "description": "前端传入的FORM参数",
                    "type": "Object"
                },
                {
                    "name": "flag",
                    "description": "操作的类型标志",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1320,
            "description": "取查看页面的设置，组合成列表数据的HTML输出</br>\n如果需要改变查看页面的逻辑，可以重写本方法，或者修改 this.modCols的设置值后调用 super.htmlGetView()",
            "itemtype": "method",
            "name": "htmlGetView",
            "return": {
                "description": "HTML页面片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "isPrintStyle",
                    "description": "是否是打印的风格",
                    "type": "Boolean",
                    "optional": true
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1413,
            "description": "取查看页面的设置，组合成打印页面的HTML输出",
            "itemtype": "method",
            "name": "htmlGetPrint",
            "return": {
                "description": "HTML页面片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1427,
            "description": "删除记录,<br/>\n子类中可以重写本方法，实现其他的删除逻辑，如判断是否可以删除，删除相关联的其他记录等等",
            "itemtype": "method",
            "name": "pageDelete",
            "return": {
                "description": "记录对象",
                "type": "Object"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1446,
            "description": "取分页列表的 footer 设置，组合成HTML输出，一般不需要重写本方法",
            "itemtype": "method",
            "name": "htmlGetFooter",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1467,
            "description": "修改状态，供界面按钮直接调用，工作流相关方法（状态流转类）</br>\n子类中覆写本方法，可以根据业务对象的状态增加其他逻辑",
            "itemtype": "method",
            "name": "updateStatus",
            "return": {
                "description": "结果输出",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "记录ID",
                    "type": "Int"
                },
                {
                    "name": "actID",
                    "description": "流程节点ID",
                    "type": "Int"
                },
                {
                    "name": "status",
                    "description": "状态值，一般在t_code表中设置",
                    "type": "Int"
                },
                {
                    "name": "isSelf",
                    "description": "自身表单的调用，区别于其他模块的调用",
                    "type": "Boolean"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1488,
            "description": "取模块列表的显示列设置，组合成时间轴HTML输出，一般在子类中通过重写这个方法来达到页面定制的效果",
            "itemtype": "method",
            "name": "htmlGetListTimeline",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page.js",
            "line": 1521,
            "description": "根据参数ID取参数的名称，一般用于页面模块配置中的‘替换’调用: admin/cdoe:getNameById </br>\n子类中重写的时候需要为 this.mod.c_table 和 this.pk 赋值，因为直接调用的时候进行模块设置的初始化 </br>\n当然也可以重写 constructor 设置这两个值",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "参数名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "参数ID",
                    "type": "Int"
                },
                {
                    "name": "fieldNames",
                    "description": "字段名称,逗号分隔",
                    "type": "String"
                },
                {
                    "name": "joinStr",
                    "description": "连接的字符串",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.page",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_excel.js",
            "line": 22,
            "description": "根据查询结果集和模块的列设置把数据导出成excel文件",
            "itemtype": "method",
            "name": "excelExport",
            "return": {
                "description": "excel文件格式的对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "list",
                    "description": "结果记录集对象",
                    "type": "Object"
                },
                {
                    "name": "modCols",
                    "description": "页面显示列设置",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_excel",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_excel.js",
            "line": 53,
            "description": "根据业务模块显示列的设置信息得到某一列的excel样式",
            "itemtype": "method",
            "name": "getColStyle",
            "return": {
                "description": "excel列的样式对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "col",
                    "description": "业务模块显示列的设置,某个字段",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_excel",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_excel.js",
            "line": 69,
            "description": "根据业务模块显示列的设置信息得到某一行某一列的值，子类中重写本方法，可以定制输出值",
            "itemtype": "method",
            "name": "getColData",
            "return": {
                "description": "excel列的样式对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "item",
                    "description": "记录对象，一条",
                    "type": "Object"
                },
                {
                    "name": "col",
                    "description": "业务模块显示列的设置,某个字段",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_excel",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_lookup.js",
            "line": 24,
            "description": "是否显示列表中的按钮，子类中重写本方法可以改变按钮显示的逻辑",
            "itemtype": "method",
            "name": "isShowRowBtns",
            "return": {
                "description": "是否显示",
                "type": "Boolean"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面按钮的设置",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_lookup",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_lookup.js",
            "line": 34,
            "description": "取列表中按钮的设置，组合成HTML输出,<br/>\n重写父类的方法，子类中也可重写本方法，更改返回的字段和值等",
            "itemtype": "method",
            "name": "htmlGetBtnList",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "rec",
                    "description": "每行的记录对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_lookup",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_lookup.js",
            "line": 62,
            "description": "取查找带回页面中选择行的返回字段及值",
            "itemtype": "method",
            "name": "getLookupResult",
            "return": {
                "description": "返回字段组成的数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "rec",
                    "description": "每行的记录对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_lookup",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_lookup.js",
            "line": 96,
            "description": "顶部按钮不需要显示，<br/> 重写父类的方法，子类中也可重写本方法，增加其他按钮",
            "itemtype": "method",
            "name": "htmlGetBtnHeader",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "page",
                    "description": "页面对象，包括前端传过来的参数和当前的用户信息等",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_lookup",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_lookup.js",
            "line": 115,
            "description": "取模块列表中的MUI设置，组合成HTML输出，一般在子类中通过重写这个方法来达到页面定制的效果",
            "itemtype": "method",
            "name": "mobHtmlGetList",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page_lookup",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 10,
            "description": "page_mob model 实现手机APP的模块接口",
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 25,
            "description": "取模块列表中的MUI设置，组合成HTML输出，一般在子类中通过重写这个方法来达到页面定制的效果",
            "itemtype": "method",
            "name": "mobHtmlGetList",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 65,
            "description": "生成列表每一行的按钮组HTML输出，一般在子类中通过重写这个方法来达到定制输出按钮的效果",
            "itemtype": "method",
            "name": "mobHtmlGetListBtns",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "row",
                    "description": "记录对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 97,
            "description": "生成列表头部按钮组HTML输出，一般在子类中通过重写这个方法来达到定制输出按钮的效果",
            "itemtype": "method",
            "name": "mobHtmlGetHeaderBtnsFromModule",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 130,
            "description": "取模块的MUI设置，一般在子类中通过重写这个方法来增加MUI的配置信息，需要手机端做相应的逻辑实现",
            "itemtype": "method",
            "name": "mobGetPageMuiSetting",
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 140,
            "description": "生成列表每一行的内容HTML输出，一般在子类中通过重写这个方法来达到定制分页列表的显示效果，例如： demo/customer:mobHtmlGetListRow",
            "itemtype": "method",
            "name": "mobHtmlGetListRow",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "row",
                    "description": "记录对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 161,
            "description": "取业务模块中的查询列设置，组合成APP端HTML输出，为保持和PC端的一致性，一般不需要重写",
            "itemtype": "method",
            "name": "mobHtmlGetQuery",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 250,
            "description": "取业务模块中的编辑列设置，组合成APP端HTML输出，为保持和PC端的一致性，一般不需要重写",
            "itemtype": "method",
            "name": "mobHtmlGetEdit",
            "return": {
                "description": "HTML片段",
                "type": "String"
            },
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_mob.js",
            "line": 347,
            "description": "改变某些编辑列的样式，子类中可以重写本方法类增加模块编辑页面的操作逻辑",
            "itemtype": "method",
            "name": "mobHtmlGetEditInput",
            "return": {
                "description": "Edit页面的Input的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "col",
                    "description": "Edit页面的当前编辑列设置",
                    "type": "Object"
                },
                {
                    "name": "colValue",
                    "description": "Input的值",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "Edit页面的Input的HTML片段",
                    "type": "String"
                }
            ],
            "class": "cmpage.model.page_mob",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_ms.js",
            "line": 10,
            "description": "page_rec model 实现主从表页面的编辑和查看",
            "class": "cmpage.model.utils",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_ms.js",
            "line": 50,
            "description": "取结果数据集，子类中重写本方法可以增加逻辑如：对结果集做进一步的数据处理等",
            "itemtype": "method",
            "name": "getDataList",
            "return": {
                "description": "结果集数据包 {count:xxx, list:[{record}]}",
                "type": "Object"
            },
            "class": "cmpage.model.utils",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\page_ms.js",
            "line": 62,
            "description": "取查看页面的设置，组合成打印页面的HTML输出",
            "itemtype": "method",
            "name": "htmlGetPrint",
            "return": {
                "description": "HTML页面片段",
                "type": "String"
            },
            "class": "cmpage.model.utils",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\utils.js",
            "line": 22,
            "description": "从cmpage的enum设置中提取name值, 一般用于页面模块配置中的‘替换’调用: cmpage/utils:getEnumName",
            "itemtype": "method",
            "name": "getEnumName",
            "return": {
                "description": "enum值的名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "enum值",
                    "type": "Int"
                },
                {
                    "name": "enumObj",
                    "description": "enum对象，在 cmpage/cmpage_cmpage.js中配置",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.utils",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\model\\utils.js",
            "line": 42,
            "description": "从cmpage的enum设置中提取name值, 一般用于页面模块配置中的‘下拉框选择’调用: cmpage/utils:getEnum",
            "itemtype": "method",
            "name": "getEnum",
            "return": {
                "description": "enum值组成的数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "enumObj",
                    "description": "enum对象，在 cmpage/cmpage_cmpage.js中配置",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.utils",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 17,
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 27,
            "description": "对象转换成字符串，其中的属性不带双引号，字符串和时间类型带单引号，其余默认转换，可以用 eval 转成对象<br/>\n一般用于 某数据表记录的字段替换 事先设置的子字符串，子字符串的格式如：#id#",
            "itemtype": "method",
            "name": "objPropertysReplaceToStr",
            "return": {
                "description": "替换后的字符串",
                "type": "String"
            },
            "params": [
                {
                    "name": "str",
                    "description": "源字符串",
                    "type": "String"
                },
                {
                    "name": "obj",
                    "description": "源对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 65,
            "description": "在目标对象上增加另一个对象的某些属性，如有重叠，则覆盖其值",
            "itemtype": "method",
            "name": "objPropertysFromOtherObj",
            "return": {
                "description": "新的对象，其属性集是源对象的子集",
                "type": "Object"
            },
            "params": [
                {
                    "name": "toObj",
                    "description": "目标对象",
                    "type": "Object"
                },
                {
                    "name": "fromObj",
                    "description": "源对象",
                    "type": "Object"
                },
                {
                    "name": "arrProps",
                    "description": "需要COPY的熟悉数组",
                    "type": "Array"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 82,
            "description": "对象转换成字符串，其中的属性不带双引号，字符串和时间类型带单引号，其余默认转换，可以用 eval 转成对象<br/>\n一般用 cmpage.objFromString(str) 进行转换",
            "itemtype": "method",
            "name": "objToString",
            "return": {
                "description": "序列化后的字符串",
                "type": "String"
            },
            "params": [
                {
                    "name": "obj",
                    "description": "源对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 121,
            "description": "把字符串转换成对象，一般该字符串是从 cmpage.objToString(obj) 转换而来 <br/>",
            "itemtype": "method",
            "name": "objFromString",
            "return": {
                "description": "目标对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "str",
                    "description": "序列化后的字符串",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 133,
            "description": "把字符串转换成数组对象，其元素是对象，一般该元素是从 cmpage.objToString(obj) 转换而来 <br/>",
            "itemtype": "method",
            "name": "arrFromString",
            "return": {
                "description": "JSON对象数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "str",
                    "description": "序列化后的字符串",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 151,
            "description": "从对象数组中查找符合匹配条件的元素，组成新的数组返回 <br/>\n    × 一般用于从记录表中按条件删选出子表",
            "itemtype": "method",
            "name": "arrFromString",
            "return": {
                "description": "JSON对象数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "来源数组",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "where",
                    "description": "条件对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 175,
            "description": "从一个对象数组中取某一列（属性）值组成的数组，一般用于处理select返回的结果集",
            "itemtype": "method",
            "name": "arrGetValuesByColumnName",
            "return": {
                "description": "新的数组，由源数组元素的某个属性值组成",
                "type": "Array"
            },
            "params": [
                {
                    "name": "arr",
                    "description": "对象数组",
                    "type": "Array"
                },
                {
                    "name": "fromObj",
                    "description": "源对象",
                    "type": "Object"
                },
                {
                    "name": "columnName",
                    "description": "属性名称",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 191,
            "description": "从一个对象中取某些属性值组成的字符串，一般用于连接某条记录的某些值",
            "itemtype": "method",
            "name": "strGetValuesByPropertyName",
            "return": {
                "description": "新的字符串，由指定的属性值组成",
                "type": "String"
            },
            "params": [
                {
                    "name": "obj",
                    "description": "源对象",
                    "type": "Object"
                },
                {
                    "name": "fromObj",
                    "description": "源对象",
                    "type": "Object"
                },
                {
                    "name": "propertyNames",
                    "description": "属性名称,逗号分隔",
                    "type": "String"
                },
                {
                    "name": "joinStr",
                    "description": "连接的字符串",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 210,
            "description": "去除数组中的重复值",
            "itemtype": "method",
            "name": "arrGetUnique",
            "return": {
                "description": "新的数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "arr",
                    "description": "源数组",
                    "type": "Array"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 229,
            "description": "进行CRUD之前转换成合适的值，用来匹配 thinkjs 的CRUD方法",
            "itemtype": "method",
            "name": "checksql",
            "return": {
                "description": "新的对象，其属性已做SQL特性匹配",
                "type": "Object"
            },
            "params": [
                {
                    "name": "fromObj",
                    "description": "记录对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 245,
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 256,
            "description": "从URL字符串中解析出参数对象",
            "itemtype": "method",
            "name": "parmsFromUrl",
            "return": {
                "description": "url参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "url",
                    "description": "URL字符串",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 279,
            "description": "通过形如：demo/customer 参数返回model，数据库配置采用model所在模块的配置",
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "thinkjs.model 对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "path",
                    "description": "业务模块的实现类设置",
                    "type": "String"
                },
                {
                    "name": "defaultPath",
                    "description": "业务模块默认的实现类",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 302,
            "description": "时间格式化输出",
            "itemtype": "method",
            "name": "model",
            "return": {
                "description": "格式化输出",
                "type": "String"
            },
            "params": [
                {
                    "name": "date",
                    "description": "需要格式化的日期对象",
                    "type": "Object"
                },
                {
                    "name": "format",
                    "description": "格式： 如： yyyy-MM-dd HH:mm:ss",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 320,
            "description": "cmpage的全局变量初始化，如enum等\n值>0 ,是为了和数据库中其他的参数值设置方式保持一致",
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 348,
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 390,
            "description": "有小数的格式化输出",
            "itemtype": "method",
            "name": "formatNumber",
            "return": {
                "description": "格式化输出",
                "type": "String"
            },
            "params": [
                {
                    "name": "mum",
                    "description": "需要格式化的数值",
                    "type": "Float"
                },
                {
                    "name": "opt",
                    "description": "格式化配置对象，一般中业务模块的列设置中制定格式如： #####0.00",
                    "type": "Object"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 408,
            "description": "取两个整数间的随机整数",
            "itemtype": "method",
            "name": "getRandomNum",
            "return": {
                "description": "随机整数",
                "type": "Int"
            },
            "params": [
                {
                    "name": "Min",
                    "description": "最小整数",
                    "type": "Int"
                },
                {
                    "name": "Max",
                    "description": "最大整数",
                    "type": "Int"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 425,
            "description": "过滤敏感字符串",
            "itemtype": "method",
            "name": "",
            "return": {
                "description": "过滤后的字符串",
                "type": "String"
            },
            "params": [
                {
                    "name": "str",
                    "description": "源字符串",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\cmpage\\cmpage_global.js",
            "line": 441,
            "description": "根据文件名称判断文件是否是图片类型",
            "itemtype": "method",
            "name": "",
            "return": {
                "description": "是否图片文件",
                "type": "Boolean"
            },
            "params": [
                {
                    "name": "filename",
                    "description": "文件名称",
                    "type": "String"
                }
            ],
            "class": "cmpage.cmpage_global",
            "module": "cmpage.model"
        },
        {
            "file": "src\\flow\\config\\config.js",
            "line": 2,
            "description": "config",
            "class": "flow.controller.act",
            "module": "cmpage.model"
        },
        {
            "file": "src\\flow\\controller\\act.js",
            "line": 24,
            "description": "编辑流程节点内容， GET调用： /flow/act/edit?id=xxx",
            "itemtype": "method",
            "name": "edit",
            "return": {
                "description": "act编辑页面的HTML片段",
                "type": "Json"
            },
            "class": "flow.controller.act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\act.js",
            "line": 45,
            "description": "删除流程节点并删除相关的路径信息， GET调用： /flow/act/delete?id=xxx",
            "itemtype": "method",
            "name": "delete",
            "return": {
                "description": "删除状态",
                "type": "Json"
            },
            "class": "flow.controller.act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\act.js",
            "line": 57,
            "description": "删除流程节点的路径信息， GET调用： /flow/act/delete_path?id=xxx",
            "itemtype": "method",
            "name": "deletePath",
            "return": {
                "description": "删除状态",
                "type": "Json"
            },
            "class": "flow.controller.act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\act.js",
            "line": 69,
            "description": "编辑流程节点内容， GET调用： /flow/act/edit?id=xxx",
            "itemtype": "method",
            "name": "edit",
            "return": {
                "description": "act编辑页面的HTML片段",
                "type": "Json"
            },
            "class": "flow.controller.act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\base.js",
            "line": 13,
            "description": "本模块的所有action执行前的检查项",
            "itemtype": "method",
            "name": "__before",
            "return": {
                "description": "当前用户未登录时，返回错误信息或者引导到登录页面",
                "type": "Promise"
            },
            "class": "flow.controller.base",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\proc.js",
            "line": 10,
            "description": "图形化设置流程模板， 调用： /flow/proc/desing?id=xxx",
            "itemtype": "method",
            "name": "design",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "flow.controller.proc",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\proc.js",
            "line": 49,
            "description": "取流程模板的图形信息 调用： /flow/proc/flow_map?proc_id=xxx",
            "itemtype": "method",
            "name": "flowMap",
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "flow.controller.proc",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\proc.js",
            "line": 63,
            "description": "保存流程模板的图形信息，如果某个节点和路径的data_id==0，则增加相应记录 POST调用： /flow/proc/save_map",
            "itemtype": "method",
            "name": "saveMap",
            "return": {
                "description": "",
                "type": "Json"
            },
            "class": "flow.controller.proc",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task.js",
            "line": 11,
            "description": "启动一个新的流程实例, GET调用：/flow/task/start?procID=xxx",
            "itemtype": "method",
            "name": "start",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task.js",
            "line": 59,
            "description": "重新运行一个流程实例, GET调用：/flow/task/run?task_id=xxx",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task.js",
            "line": 75,
            "description": "挂起一个流程实例, GET调用：/flow/task/suspend?task_id=xxx",
            "itemtype": "method",
            "name": "suspend",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task.js",
            "line": 89,
            "description": "终止一个流程实例, GET调用：/flow/task/terminate?task_id=xxx",
            "itemtype": "method",
            "name": "terminate",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task.js",
            "line": 103,
            "description": "自动执行, GET调用：/flow/task/auto_exec",
            "itemtype": "method",
            "name": "autoExec",
            "return": {
                "description": "状态消息",
                "type": "Json"
            },
            "class": "flow.controller.task",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task_act.js",
            "line": 12,
            "description": "重新运行一个流程实例的某个节点, GET调用：/flow/task_act/run?taskActID=xxx",
            "itemtype": "method",
            "name": "run",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task_act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task_act.js",
            "line": 23,
            "description": "挂起一个流程实例, GET调用：/flow/proc/suspend?taskActID=xxx",
            "itemtype": "method",
            "name": "suspend",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task_act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\controller\\task_act.js",
            "line": 33,
            "description": "终止一个流程实例, GET调用：/flow/proc/terminate?taskActID=xxx",
            "itemtype": "method",
            "name": "terminate",
            "return": {
                "description": "流程实例对象",
                "type": "Json"
            },
            "class": "flow.controller.task_act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\logic\\index.js",
            "line": 2,
            "description": "logic",
            "params": [
                {
                    "name": "",
                    "description": "",
                    "optional": true
                }
            ],
            "return": {
                "description": "[]"
            },
            "class": "flow.model.act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\logic\\index.js",
            "line": 8,
            "description": "index action logic",
            "return": {
                "description": "[]"
            },
            "class": "flow.model.act",
            "module": "flow.controller"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 30,
            "description": "是否可以运行一个活动(流程节点)，对外提供调用",
            "itemtype": "method",
            "name": "canRun",
            "return": {
                "description": "判断值",
                "type": "Bool"
            },
            "params": [
                {
                    "name": "taskActID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "taskAct",
                    "description": "活动节点对象",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 45,
            "description": "运行一个活动(流程节点)<br/>\ncanRun的判断在具体的业务task_act中调用",
            "itemtype": "method",
            "name": "fwRun",
            "params": [
                {
                    "name": "taskActID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "taskAct",
                    "description": "活动节点对象",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 61,
            "description": "挂起一个活动(流程节点)，",
            "itemtype": "method",
            "name": "fwSuspend",
            "params": [
                {
                    "name": "taskActID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "taskAct",
                    "description": "活动节点对象",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 75,
            "description": "终止一个活动(流程节点)，",
            "itemtype": "method",
            "name": "fwTerminate",
            "params": [
                {
                    "name": "taskActID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "taskAct",
                    "description": "活动节点对象",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 90,
            "description": "正常结束一个活动(流程节点)，",
            "itemtype": "method",
            "name": "fwEnd",
            "params": [
                {
                    "name": "taskActID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "taskAct",
                    "description": "活动节点对象",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 105,
            "description": "取活动(流程节点)参数，供其他方法调用",
            "itemtype": "method",
            "name": "fwGetActParms",
            "params": [
                {
                    "name": "actID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "taskAct",
                    "description": "活动节点对象",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 123,
            "description": "检查任务列表的所有当前节点，如果是自动执行的节点，则执行之",
            "itemtype": "method",
            "name": "fwAutoExec",
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 171,
            "description": "把节点根据路径走向排序，供其他方法调用",
            "itemtype": "method",
            "name": "getActsOrder",
            "return": {
                "description": "流程节点的对象数组",
                "type": "Array"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 250,
            "description": "取某个节点的有效去向节点，过滤掉或者自动完成非人为参与的节点，供其他方法调用",
            "itemtype": "method",
            "name": "getToActsFromId",
            "return": {
                "description": "去向节点集",
                "type": "Array"
            },
            "params": [
                {
                    "name": "actID",
                    "description": "当前节点",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int",
                    "optional": true
                },
                {
                    "name": "toActs",
                    "description": "去向节点集",
                    "type": "Array",
                    "optional": true
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 282,
            "description": "根据ID取活动(流程节点)参数，供其他方法调用",
            "itemtype": "method",
            "name": "getActById",
            "return": {
                "description": "活动(流程节点)参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 298,
            "description": "根据ID和模板ID取活动(流程节点)参数，供其他方法调用<br/>\n模板较多的时候，用本方法来改进性能",
            "itemtype": "method",
            "name": "getActByIdAndProcId",
            "return": {
                "description": "活动(流程节点)参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 316,
            "description": "根据ID取活动节点的名称，一般用于页面模块配置中的‘替换’调用: flow/act:getNameById",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "活动名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 332,
            "description": "取活动节点的列表，一般用于页面模块配置中的‘替换’调用: flow/act:getActs",
            "itemtype": "method",
            "name": "getActs",
            "return": {
                "description": "活动节点列表",
                "type": "Array"
            },
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act.js",
            "line": 344,
            "description": "根据流程模板ID取活动节点的列表，一般用于页面模块配置中的‘替换’调用: flow/act:getActsByProcId",
            "itemtype": "method",
            "name": "getActsByProcId",
            "return": {
                "description": "活动节点列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 18,
            "description": "新增的时候，初始化编辑页面的值，子类重写本方法可以定制新增页面的初始值",
            "itemtype": "method",
            "name": "pageEditInit",
            "return": {
                "description": "新增的记录对象",
                "type": "Object"
            },
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 31,
            "description": "改变某些编辑列的样式，子类中可以重写本方法类增加模块编辑页面的操作逻辑",
            "itemtype": "method",
            "name": "htmlGetEditInput",
            "return": {
                "description": "Edit页面的Input的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "col",
                    "description": "Edit页面的当前编辑列设置",
                    "type": "Object"
                },
                {
                    "name": "colValue",
                    "description": "Input的值",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "Edit页面的Input的HTML片段",
                    "type": "String"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 73,
            "description": "根据模板节点ID和用户属性取该节点的权限，供其他方法调用<br/>",
            "itemtype": "method",
            "name": "getAssignByUser",
            "return": {
                "description": "权限对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "actID",
                    "description": "流程模板的节点ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "用户对象",
                    "type": "Object"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 98,
            "description": "根据取流程节点指派记录的ID，取关联人的名称，一般用于页面模块配置中的‘替换’调用: flow/act_assign:getLinkNameById",
            "itemtype": "method",
            "name": "getLinkNameById",
            "return": {
                "description": "关联名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "关联ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 116,
            "description": "根据ID取活动(流程节点)的指派记录对象，供其他方法调用",
            "itemtype": "method",
            "name": "getAssignById",
            "return": {
                "description": "活动(流程节点)参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 132,
            "description": "根据ID和模板节点ID取活动(流程节点)的指派记录对象，供其他方法调用<br/>\n模板较多的时候，用本方法来改进性能",
            "itemtype": "method",
            "name": "getAssignByActId",
            "return": {
                "description": "活动(流程节点)参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "actID",
                    "description": "流程模板的节点ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 150,
            "description": "取活动节点的指派对象列表，一般用于页面模块配置中的‘替换’调用: flow/act_assign:getAssigns",
            "itemtype": "method",
            "name": "getAssigns",
            "return": {
                "description": "活动节点列表",
                "type": "Array"
            },
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_assign.js",
            "line": 160,
            "description": "根据流程模板节点ID取活动节点的指派记录列表，一般用于页面模块配置中的‘替换’调用: flow/act_assign:getAssignsByActId",
            "itemtype": "method",
            "name": "getAssignsByActId",
            "return": {
                "description": "活动节点列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "actID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_path.js",
            "line": 17,
            "description": "根据ID取活动路径对象，供其他方法调用",
            "itemtype": "method",
            "name": "getActPathById",
            "return": {
                "description": "活动路径对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动路径ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act_path",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_path.js",
            "line": 33,
            "description": "根据ID和模板ID取活动路径对象，供其他方法调用<br/>\n模板较多的时候，用本方法来改进性能",
            "itemtype": "method",
            "name": "getActPathByIdAndProcId",
            "return": {
                "description": "活动路径对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动路径ID",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act_path",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_path.js",
            "line": 51,
            "description": "根据活动节点ID和模板ID取来源的节点ID，供其他方法调用",
            "itemtype": "method",
            "name": "getFromActIDs",
            "return": {
                "description": "节点ID的列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "actID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act_path",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_path.js",
            "line": 69,
            "description": "根据活动节点ID和模板ID取去向的节点ID，供其他方法调用",
            "itemtype": "method",
            "name": "getToActIDs",
            "return": {
                "description": "节点ID的列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "actID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act_path",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_path.js",
            "line": 87,
            "description": "根据活动节点ID和模板ID取去向的路径列表，供其他方法调用",
            "itemtype": "method",
            "name": "getToActPaths",
            "return": {
                "description": "去向路径的列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "actID",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act_path",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\act_path.js",
            "line": 106,
            "description": "根据ID取活动路径对象的名称，一般用于页面模块配置中的‘替换’调用: flow/act_path:getNameById",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "活动名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动路径ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.act_path",
            "module": "flow.model"
        },
        {
            "file": "src\\flow\\model\\appr.js",
            "line": 24,
            "description": "取查询项的设置，结合POST参数，得到Where字句",
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr.js",
            "line": 32,
            "description": "审核页面初始化，从URL传入参数",
            "itemtype": "method",
            "name": "pageEditInit",
            "return": {
                "description": "新增的记录对象",
                "type": "Object"
            },
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr.js",
            "line": 50,
            "description": "取当前记录对象，用于新增和修改的编辑页面展示",
            "itemtype": "method",
            "name": "getDataRecord",
            "return": {
                "description": "当前记录对象",
                "type": "Object"
            },
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr.js",
            "line": 62,
            "description": "编辑页面保存,<br/>\n保存之前需要更新关联对象的状态",
            "itemtype": "method",
            "name": "pageSave",
            "params": [
                {
                    "name": "parms",
                    "description": "前端传入的FORM参数",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr_task.js",
            "line": 24,
            "description": "取查询项的设置，结合POST参数，得到Where字句",
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr_task.js",
            "line": 32,
            "description": "审核页面初始化，从URL传入参数",
            "itemtype": "method",
            "name": "pageEditInit",
            "return": {
                "description": "新增的记录对象",
                "type": "Object"
            },
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr_task.js",
            "line": 52,
            "description": "编辑页面保存,<br/>\n保存后需要更新关联对象的状态",
            "itemtype": "method",
            "name": "pageSave",
            "params": [
                {
                    "name": "parms",
                    "description": "前端传入的FORM参数",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\appr_task.js",
            "line": 76,
            "description": "增加审核状态记录,<br/>\n增加后需要更新关联对象的状态",
            "itemtype": "method",
            "name": "addStatus",
            "params": [
                {
                    "name": "taskAct",
                    "description": "任务节点对象",
                    "type": "Object"
                },
                {
                    "name": "act",
                    "description": "流程模板节点对象",
                    "type": "Object"
                },
                {
                    "name": "user",
                    "description": "当前用户对象",
                    "type": "Object"
                }
            ],
            "class": "cmpage.model.appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 18,
            "description": "开始一个新的流程实例</br>\n调用前先初始化 fwInit",
            "itemtype": "method",
            "name": "fwStart",
            "return": {
                "description": "流程实例对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程发起人",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 41,
            "description": "运行一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwRun",
            "return": {
                "description": "流程实例对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 55,
            "description": "挂起一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwSuspend",
            "return": {
                "description": "流程实例对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 69,
            "description": "终止一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwTerminate",
            "return": {
                "description": "流程实例对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 83,
            "description": "正常结束一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwEnd",
            "return": {
                "description": "流程实例对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 97,
            "description": "取流程模板的参数，供其他方法调用",
            "itemtype": "method",
            "name": "fwGetActParms",
            "return": {
                "description": "其他方法调用的参数列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "模板实例（任务）ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "流程执行人",
                    "type": "Object"
                },
                {
                    "name": "procID",
                    "description": "模板ID,当 taskID===0 时，取procID的值",
                    "type": "Int",
                    "optional": true
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 114,
            "description": "根据ID取流程模板的设置，供其他方法调用，子类不需要重写",
            "itemtype": "method",
            "name": "getActById",
            "return": {
                "description": "流程模板对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc.js",
            "line": 130,
            "description": "根据ID取流程模板的名称，一般用于页面模块配置中的‘替换’调用: flow/proc:getNameById",
            "itemtype": "method",
            "name": "getNameById",
            "return": {
                "description": "模板名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 18,
            "description": "新增的时候，初始化编辑页面的值，子类重写本方法可以定制新增页面的初始值",
            "itemtype": "method",
            "name": "pageEditInit",
            "return": {
                "description": "新增的记录对象",
                "type": "Object"
            },
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 33,
            "description": "改变某些编辑列的样式，子类中可以重写本方法类增加模块编辑页面的操作逻辑",
            "itemtype": "method",
            "name": "htmlGetEditInput",
            "return": {
                "description": "Edit页面的Input的HTML片段",
                "type": "String"
            },
            "params": [
                {
                    "name": "col",
                    "description": "Edit页面的当前编辑列设置",
                    "type": "Object"
                },
                {
                    "name": "colValue",
                    "description": "Input的值",
                    "type": "String"
                },
                {
                    "name": "input",
                    "description": "Edit页面的Input的HTML片段",
                    "type": "String"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 76,
            "description": "根据模板ID和用户属性取该流程的按钮权限，供其他方法调用<br/>",
            "itemtype": "method",
            "name": "getAssignByUser",
            "return": {
                "description": "权限对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                },
                {
                    "name": "user",
                    "description": "用户对象",
                    "type": "Object"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 96,
            "description": "根据取流程指派记录的ID，取关联人的名称，一般用于页面模块配置中的‘替换’调用: flow/proc_assign:getLinkNameById",
            "itemtype": "method",
            "name": "getLinkNameById",
            "return": {
                "description": "模板名称",
                "type": "String"
            },
            "params": [
                {
                    "name": "id",
                    "description": "模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 113,
            "description": "根据ID取任务的指派记录对象，供其他方法调用",
            "itemtype": "method",
            "name": "getAssignById",
            "return": {
                "description": "活动(流程节点)参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 129,
            "description": "根据ID和模板ID取任务的指派记录对象，供其他方法调用<br/>\n模板较多的时候，用本方法来改进性能",
            "itemtype": "method",
            "name": "getAssignByProcId",
            "return": {
                "description": "活动(流程节点)参数对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "id",
                    "description": "活动节点ID",
                    "type": "Int"
                },
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 147,
            "description": "取任务的指派记录列表，一般用于页面模块配置中的‘替换’调用: flow/proc_assign:getAssigns",
            "itemtype": "method",
            "name": "getAssigns",
            "return": {
                "description": "活动节点列表",
                "type": "Array"
            },
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_assign.js",
            "line": 157,
            "description": "根据流程模板ID取任务的指派记录列表，一般用于页面模块配置中的‘替换’调用: flow/proc_assign:getAssignsByProcId",
            "itemtype": "method",
            "name": "getAssignsByProcId",
            "return": {
                "description": "活动节点列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.proc_assign",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 15,
            "description": "初始化编辑页面的值",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 27,
            "description": "编辑页面保存,\n如果是多个表的视图，则根据存在于page.c_table中的列更新表，一般需要在子类中继承",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 40,
            "description": "根据模板的类型自动生成活动节点",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 47,
            "description": "取模板的流程图数据",
            "itemtype": "method",
            "name": "getStocks",
            "return": {
                "description": "流程图数据",
                "type": "String"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 61,
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 87,
            "description": "保存流程模板的图形信息，如果某个节点和路径的data_id==0，则增加相应记录 POST调用： /flow/proc/save_map",
            "itemtype": "method",
            "name": "saveMap",
            "return": {
                "description": "",
                "type": "Object"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\proc_list.js",
            "line": 129,
            "description": "复制流程模板生成新的流程模板，模板名称 xxxxx_copy",
            "itemtype": "method",
            "name": "copyToNewProc",
            "return": {
                "description": "拷贝状态，包括新的流程模板对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "procID",
                    "description": "流程模板ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 22,
            "description": "创建(启动)一个新的流程实例(任务)",
            "itemtype": "method",
            "name": "fwStart",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 72,
            "description": "取某个任务的当前状态，当前节点存放于 task.currAct <br/>\n子类中重写本方法，可以增加任务的初始化逻辑，比如业务相关的逻辑",
            "itemtype": "method",
            "name": "getTaskWithStatus",
            "return": {
                "description": "当前节点的模板对象",
                "type": "Object"
            },
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 100,
            "description": "初始化一个的流程实例(任务)<br/>\n子类中重写本方法，可以增加任务的初始化逻辑，比如业务相关的逻辑",
            "itemtype": "method",
            "name": "fwInit",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 111,
            "description": "根据编号规则生成任务编号<br/>\n子类中可以重写本方法，实现特殊的编号规则",
            "itemtype": "method",
            "name": "getTaskNo",
            "return": {
                "description": "新的任务编号",
                "type": "String"
            },
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 127,
            "description": "运行一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwRun",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 145,
            "description": "挂起一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwSuspend",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 161,
            "description": "终止一个流程实例(任务)",
            "itemtype": "method",
            "name": "fwTerminate",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 191,
            "description": "正常结束一个流程实例(任务)，一般在结束节点执行完成后调用",
            "itemtype": "method",
            "name": "fwEnd",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 202,
            "description": "增加流程实例的状态记录，记录流程示例发生状态改变的时间及当时状态",
            "itemtype": "method",
            "name": "addTaskSt",
            "params": [
                {
                    "name": "desc",
                    "description": "状态描述",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 221,
            "description": "保存程实例记录，此处可使用缓存机制改进性能",
            "itemtype": "method",
            "name": "save",
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 234,
            "description": "取流程实例对象，此处可使用缓存机制改进性能",
            "itemtype": "method",
            "name": "getTask",
            "return": {
                "description": "流程实例对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 244,
            "description": "取流程实例的创建用户对象，供没有特定用户，如自动执行等操作调用",
            "itemtype": "method",
            "name": "getUserFromTask",
            "return": {
                "description": "流程实例的用户对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task.js",
            "line": 258,
            "description": "取流程实例对象的轨迹图,<br/>\n先取流程模板的图片数据，然后修改当前节点和执行路径的属性值",
            "itemtype": "method",
            "name": "getFlowMap",
            "return": {
                "description": "流程图形的字符串",
                "type": "String"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务对象ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 23,
            "description": "是否可以运行一个流程实例的活动(流程节点)",
            "itemtype": "method",
            "name": "canRun",
            "return": {
                "description": "判断值",
                "type": "Boolean"
            },
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 74,
            "description": "自定义from规则，一般用于需要中断（等待）的操作完成后，调用本方法<br/>\n子类中可以重写本方法实现更多的控制逻辑",
            "itemtype": "method",
            "name": "defineFromRule",
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 86,
            "description": "运行一个流程实例的活动(流程节点)",
            "itemtype": "method",
            "name": "fwRun",
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 116,
            "description": "挂起一个流程实例的活动(流程节点)",
            "itemtype": "method",
            "name": "fwSuspend",
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 127,
            "description": "终止一个流程实例的活动(流程节点)",
            "itemtype": "method",
            "name": "fwTerminate",
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 153,
            "description": "正常结束一个流程实例的活动(流程节点)",
            "itemtype": "method",
            "name": "fwEnd",
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 198,
            "description": "当节点去向规则为 或分支 的时候，通过本方法判断取哪一条路径继续 <br/>\n子类中可以重写本方法实现具体的判断逻辑，可以在路径中事先设置条件值，便于调整",
            "itemtype": "method",
            "name": "defineOrSplit",
            "return": {
                "description": "是否通过该路径",
                "type": "Boolean"
            },
            "params": [
                {
                    "name": "path",
                    "description": "去向的某一个路径",
                    "type": "Object"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 229,
            "description": "取当前节点的业务相关数据，存放于 taskAct.domainData 中 <br/>\n子类中可以重写本方法实现具体的取业务数据方法",
            "itemtype": "method",
            "name": "domainGetData",
            "return": {
                "description": "增加业务对象数据后的节点对象",
                "type": "Object"
            },
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 246,
            "description": "自定义to规则，一般用于需要中断（等待）的操作完成后，调用本方法<br/>\n子类中可以重写本方法实现更多的控制逻辑",
            "itemtype": "method",
            "name": "defineToRule",
            "return": {
                "description": "任务节点对象",
                "type": "Object"
            },
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 259,
            "description": "保存任务的活动(流程节点), taskAct结构来自于vw_task_act<br/>\n子类中可以重写本方法来增加其他逻辑，比如保存其他业务表数据等, 此处可以改用缓存机制",
            "itemtype": "method",
            "name": "save",
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 277,
            "description": "增加流程实例的活动节点状态记录，记录某个活动(流程节点)发生的时间及当时状态<br/>\n子类中重写本方法可以定制流程状态的记录方式，如在具体业务状态表中增加记录等",
            "itemtype": "method",
            "name": "addTaskSt",
            "params": [
                {
                    "name": "desc",
                    "description": "状态描述",
                    "type": "String"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 298,
            "description": "根据任务节点ID统计汇聚来源任务节点的完成数，供其他方法调用",
            "itemtype": "method",
            "name": "getFromTasksWithEnd",
            "return": {
                "description": "来源的任务节点的完成数",
                "type": "Int"
            },
            "params": [
                {
                    "name": "taskAct",
                    "description": "任务节点对象",
                    "type": "Object"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 319,
            "description": "根据任务节点ID取汇聚来源任务节点ID的列表，供其他方法调用",
            "itemtype": "method",
            "name": "getFromTaskActs",
            "return": {
                "description": "来源的任务节点的列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "taskAct",
                    "description": "任务节点对象",
                    "type": "Object"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 340,
            "description": "根据任务节点ID取分支去向的任务节点ID的列表，供其他方法调用",
            "itemtype": "method",
            "name": "getToTaskIds",
            "return": {
                "description": "去向的任务节点的列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "taskAct",
                    "description": "任务节点对象",
                    "type": "Object"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 361,
            "description": "根据任务ID取任务节点的列表，供其他方法调用",
            "itemtype": "method",
            "name": "getTaskActs",
            "return": {
                "description": "任务节点ID的列表",
                "type": "Array"
            },
            "params": [
                {
                    "name": "taskID",
                    "description": "任务ID",
                    "type": "Int"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act.js",
            "line": 372,
            "description": "取流程实例（任务）的活动节点对象，此处可使用缓存机制改进性能",
            "itemtype": "method",
            "name": "getTaskAct",
            "return": {
                "description": "流程实例的节点对象",
                "type": "Object"
            },
            "params": [
                {
                    "name": "taskActID",
                    "description": "任务对象的节点ID",
                    "type": "Object"
                }
            ],
            "class": "flow.model.task_act",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act_appr.js",
            "line": 18,
            "description": "运行一个流程实例的活动(流程节点)",
            "itemtype": "method",
            "name": "fwRun",
            "return": {
                "description": "任务节点对象",
                "type": "Object"
            },
            "class": "flow.model.task_act_appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_act_appr.js",
            "line": 39,
            "description": "取当前节点的业务相关数据，存放于 taskAct.domainData 中 <br/>\n子类中可以重写本方法实现具体的取业务数据方法",
            "itemtype": "method",
            "name": "domainGetData",
            "class": "flow.model.task_act_appr",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\model\\task_list.js",
            "line": 14,
            "description": "是否显示列表中某行的某个按钮，子类中重写本方法可以改变行按钮显示的逻辑",
            "itemtype": "method",
            "name": "isShowRowBtn",
            "return": {
                "description": "是否显示",
                "type": "Boolean"
            },
            "class": "cmpage.cmpage_global_flow",
            "module": "demo.model"
        },
        {
            "file": "src\\flow\\cmpage_global_flow.js",
            "line": 15,
            "description": "cmpage的全局变量初始化，如enum等\n值>0 ,是为了和数据库中其他的参数值设置方式保持一致",
            "class": "cmpage.cmpage_global_flow",
            "module": "cmpage.model"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:862"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:862"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:862"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:1467"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:1467"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:1467"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page.js:1467"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page_mob.js:347"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page_mob.js:347"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\cmpage\\model\\page_mob.js:347"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:30"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:30"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:30"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:45"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:45"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:45"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:61"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:61"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:61"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:75"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:75"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:75"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:90"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:90"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:90"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:105"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:105"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:105"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:171"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:250"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:250"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:250"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:282"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act.js:298"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:31"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:31"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:31"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:73"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:73"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:116"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_assign.js:132"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:17"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:33"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:33"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:51"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:51"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:69"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:69"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:87"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\act_path.js:87"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:18"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:41"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:41"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:55"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:55"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:69"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:69"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:83"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:83"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:97"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:97"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:97"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc.js:114"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:33"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:33"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:33"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:76"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:76"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:113"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\proc_assign.js:129"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task.js:202"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task.js:234"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task.js:244"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task.js:258"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:198"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:277"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:298"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:319"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:340"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:361"
        },
        {
            "message": "replacing incorrect tag: params with param",
            "line": " src\\flow\\model\\task_act.js:372"
        },
        {
            "message": "Missing item type\n代码树，输入根节点ID为参数 ------- 以下3个操作已废弃，改用 codeTreeAction -----------\n直接通过树增删改节点\n/admin/code?rootid=1",
            "line": " src\\admin\\controller\\code.js:210"
        },
        {
            "message": "Missing item type\nconfig",
            "line": " src\\cmpage\\config\\config.js:2"
        },
        {
            "message": "Missing item type\nindex action",
            "line": " src\\cmpage\\controller\\wechat.js:18"
        },
        {
            "message": "Missing item type\nconstructor",
            "line": " src\\cmpage\\model\\base.js:33"
        },
        {
            "message": "Missing item type\n创建连接",
            "line": " src\\cmpage\\model\\base.js:51"
        },
        {
            "message": "Missing item type\n执行原生SQL语句，取结果集返回",
            "line": " src\\cmpage\\model\\base.js:115"
        },
        {
            "message": "Missing item type",
            "line": " src\\cmpage\\model\\module.js:415"
        },
        {
            "message": "Missing item type",
            "line": " src\\cmpage\\model\\module.js:504"
        },
        {
            "message": "Missing item type\npage_mob model 实现手机APP的模块接口",
            "line": " src\\cmpage\\model\\page_mob.js:10"
        },
        {
            "message": "Missing item type\npage_rec model 实现主从表页面的编辑和查看",
            "line": " src\\cmpage\\model\\page_ms.js:10"
        },
        {
            "message": "Missing item type",
            "line": " src\\cmpage\\cmpage_global.js:17"
        },
        {
            "message": "Missing item type",
            "line": " src\\cmpage\\cmpage_global.js:245"
        },
        {
            "message": "Missing item type\ncmpage的全局变量初始化，如enum等\n值>0 ,是为了和数据库中其他的参数值设置方式保持一致",
            "line": " src\\cmpage\\cmpage_global.js:320"
        },
        {
            "message": "Missing item type",
            "line": " src\\cmpage\\cmpage_global.js:348"
        },
        {
            "message": "Missing item type\nconfig",
            "line": " src\\flow\\config\\config.js:2"
        },
        {
            "message": "Missing item type\nlogic",
            "line": " src\\flow\\logic\\index.js:2"
        },
        {
            "message": "Missing item type\nindex action logic",
            "line": " src\\flow\\logic\\index.js:8"
        },
        {
            "message": "Missing item type\n取查询项的设置，结合POST参数，得到Where字句",
            "line": " src\\flow\\model\\appr.js:24"
        },
        {
            "message": "Missing item type\n取查询项的设置，结合POST参数，得到Where字句",
            "line": " src\\flow\\model\\appr_task.js:24"
        },
        {
            "message": "Missing item type\n初始化编辑页面的值",
            "line": " src\\flow\\model\\proc_list.js:15"
        },
        {
            "message": "Missing item type\n编辑页面保存,\n如果是多个表的视图，则根据存在于page.c_table中的列更新表，一般需要在子类中继承",
            "line": " src\\flow\\model\\proc_list.js:27"
        },
        {
            "message": "Missing item type\n根据模板的类型自动生成活动节点",
            "line": " src\\flow\\model\\proc_list.js:40"
        },
        {
            "message": "Missing item type",
            "line": " src\\flow\\model\\proc_list.js:61"
        },
        {
            "message": "Missing item type\ncmpage的全局变量初始化，如enum等\n值>0 ,是为了和数据库中其他的参数值设置方式保持一致",
            "line": " src\\flow\\cmpage_global_flow.js:15"
        }
    ]
}